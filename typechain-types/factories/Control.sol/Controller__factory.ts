/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Controller,
  ControllerInterface,
  ConstructorParamsStruct,
} from "../../Control.sol/Controller";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "amount",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "askFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "amount",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "bidFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
            ],
            internalType: "struct MarginFee[]",
            name: "marginFees",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "numberOfPeriodsPerDay",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodDurationInMinutes",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartHour",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartMinute",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "treasuryWallet",
            type: "address",
          },
          {
            internalType: "address",
            name: "escrowWallet",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "measurementUnit",
                type: "string",
              },
            ],
            internalType: "struct Resource[]",
            name: "resources",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "sellers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "buyers",
            type: "address[]",
          },
        ],
        internalType: "struct ConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "addBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "addSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "askFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theNumber",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
    ],
    name: "calculatePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAsks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "asker",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "askPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
        ],
        internalType: "struct ResourceAsk[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
          {
            internalType: "uint16",
            name: "marginFeeId",
            type: "uint16",
          },
        ],
        internalType: "struct ResourceBid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResources",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "measurementUnit",
            type: "string",
          },
        ],
        internalType: "struct Resource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marginFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPeriodsPerDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDurationInMinutes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isAsk",
        type: "bool",
      },
    ],
    name: "pickFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "percentage",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amount",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "feeType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "cumulative",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "noCombine",
            type: "string[]",
          },
        ],
        internalType: "struct Fee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
          {
            internalType: "uint16",
            name: "marginFeeId",
            type: "uint16",
          },
        ],
        internalType: "struct ResourceBid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "pickMarginFee",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "percentage",
            type: "uint8",
          },
        ],
        internalType: "struct MarginFee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "removeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "removeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resourceAsks",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "asker",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEscrow",
        type: "address",
      },
    ],
    name: "setEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    name: "submitAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "bidPPU",
        type: "uint256",
      },
    ],
    name: "submitBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200484238038062004842833981016040819052620000349162000e67565b6200007f6040518060400160405280601481526020017f4465706c6f79696e6720436f6e74726f6c6c65720000000000000000000000008152506200068760201b620029ae1760201c565b600081602001515111620000da5760405162461bcd60e51b815260206004820152601360248201527f4e6f20626964206665652070726f76696465640000000000000000000000000060448201526064015b60405180910390fd5b8051516200012b5760405162461bcd60e51b815260206004820152601360248201527f4e6f2061736b206665652070726f7669646564000000000000000000000000006044820152606401620000d1565b600081604001515111620001825760405162461bcd60e51b815260206004820152601660248201527f4e6f206d617267696e206665652070726f7669646564000000000000000000006044820152606401620000d1565b606081015160038054608084015160a085015160c086015160e087015160ff96871661ffff199095169490941761010093871684021763ffff00001916620100009287169290920263ff0000001916919091176301000000959091169490940293909317600160201b600160c01b0319166401000000006001600160a01b03928316021790915590820151600480546001600160a01b0319169190921617905560005b81610160015151811015620002a057600982610160015182815181106200025057620002506200101a565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620002978162001030565b91505062000225565b5060005b816101400151518110156200031f5760088261014001518281518110620002cf57620002cf6200101a565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620003168162001030565b915050620002a4565b5060005b81610120015151811015620003e857600582610120015182815181106200034e576200034e6200101a565b602090810291909101810151825460018181018555600094855293839020825160049092020190815581830151805192949193620003939392850192910190620006f6565b5060408201518051620003b1916002840191602090910190620006f6565b5060608201518051620003cf916003840191602090910190620006f6565b5050508080620003df9062001030565b91505062000323565b5060005b815151811015620004e4576000826000015182815181106200041257620004126200101a565b6020908102919091018101518254600181810185556000948552938390208251600490920201805483850151604085015161ffff9081166401000000000261ffff60201b19928216620100000263ffffffff19909416919095161791909117169190911781556060820151805192949193620004959392850192910190620006f6565b50608082015160028201805460ff191691151591909117905560a08201518051620004cb91600384019160209091019062000785565b5050508080620004db9062001030565b915050620003ec565b5060005b816020015151811015620005e3576001826020015182815181106200051157620005116200101a565b6020908102919091018101518254600181810185556000948552938390208251600490920201805483850151604085015161ffff9081166401000000000261ffff60201b19928216620100000263ffffffff19909416919095161791909117169190911781556060820151805192949193620005949392850192910190620006f6565b50608082015160028201805460ff191691151591909117905560a08201518051620005ca91600384019160209091019062000785565b5050508080620005da9062001030565b915050620004e8565b5060005b8160400151518110156200066d576002826040015182815181106200061057620006106200101a565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160ff16620100000262ffffff1990911661ffff9093169290921791909117905580620006648162001030565b915050620005e7565b5050600a80546001600160a01b03191633179055620010cc565b620006d2816040516024016200069e91906200105a565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b17909152620006d516565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805462000704906200108f565b90600052602060002090601f01602090048101928262000728576000855562000773565b82601f106200074357805160ff191683800117855562000773565b8280016001018555821562000773579182015b828111156200077357825182559160200191906001019062000756565b5062000781929150620007e5565b5090565b828054828255906000526020600020908101928215620007d7579160200282015b82811115620007d75782518051620007c6918491602090910190620006f6565b5091602001919060010190620007a6565b5062000781929150620007fc565b5b80821115620007815760008155600101620007e6565b80821115620007815760006200081382826200081d565b50600101620007fc565b5080546200082b906200108f565b6000825580601f106200083c575050565b601f016020900490600052602060002090810190620006d29190620007e5565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156200089757620008976200085c565b60405290565b604080519081016001600160401b03811182821017156200089757620008976200085c565b604051608081016001600160401b03811182821017156200089757620008976200085c565b60405161018081016001600160401b03811182821017156200089757620008976200085c565b604051601f8201601f191681016001600160401b03811182821017156200093857620009386200085c565b604052919050565b60006001600160401b038211156200095c576200095c6200085c565b5060051b60200190565b805161ffff811681146200097957600080fd5b919050565b60005b838110156200099b57818101518382015260200162000981565b83811115620009ab576000848401525b50505050565b600082601f830112620009c357600080fd5b81516001600160401b03811115620009df57620009df6200085c565b620009f4601f8201601f19166020016200090d565b81815284602083860101111562000a0a57600080fd5b62000a1d8260208301602087016200097e565b949350505050565b805180151581146200097957600080fd5b600082601f83011262000a4857600080fd5b8151602062000a6162000a5b8362000940565b6200090d565b82815260059290921b8401810191818101908684111562000a8157600080fd5b8286015b8481101562000ac55780516001600160401b0381111562000aa65760008081fd5b62000ab68986838b0101620009b1565b84525091830191830162000a85565b509695505050505050565b600082601f83011262000ae257600080fd5b8151602062000af562000a5b8362000940565b82815260059290921b8401810191818101908684111562000b1557600080fd5b8286015b8481101562000ac55780516001600160401b038082111562000b3b5760008081fd5b9088019060c0828b03601f190181131562000b565760008081fd5b62000b6062000872565b62000b6d88850162000966565b8152604062000b7e81860162000966565b89830152606062000b9181870162000966565b8284015260809150818601518581111562000bac5760008081fd5b62000bbc8f8c838a0101620009b1565b82850152505060a062000bd181870162000a25565b8383015292850151928484111562000beb57600091508182fd5b62000bfb8e8b8689010162000a36565b9083015250865250505091830191830162000b19565b805160ff811681146200097957600080fd5b600082601f83011262000c3557600080fd5b8151602062000c4862000a5b8362000940565b82815260069290921b8401810191818101908684111562000c6857600080fd5b8286015b8481101562000ac5576040818903121562000c875760008081fd5b62000c916200089d565b62000c9c8262000966565b815262000cab85830162000c11565b8186015283529183019160400162000c6c565b80516001600160a01b03811681146200097957600080fd5b600082601f83011262000ce857600080fd5b8151602062000cfb62000a5b8362000940565b82815260059290921b8401810191818101908684111562000d1b57600080fd5b8286015b8481101562000ac55780516001600160401b038082111562000d415760008081fd5b908801906080828b03601f190181131562000d5c5760008081fd5b62000d66620008c2565b8784015181526040808501518481111562000d815760008081fd5b62000d918e8b83890101620009b1565b8a840152506060808601518581111562000dab5760008081fd5b62000dbb8f8c838a0101620009b1565b848401525092850151928484111562000dd657600091508182fd5b62000de68e8b86890101620009b1565b9083015250865250505091830191830162000d1f565b600082601f83011262000e0e57600080fd5b8151602062000e2162000a5b8362000940565b82815260059290921b8401810191818101908684111562000e4157600080fd5b8286015b8481101562000ac55762000e598162000cbe565b835291830191830162000e45565b60006020828403121562000e7a57600080fd5b81516001600160401b038082111562000e9257600080fd5b90830190610180828603121562000ea857600080fd5b62000eb2620008e7565b82518281111562000ec257600080fd5b62000ed08782860162000ad0565b82525060208301518281111562000ee657600080fd5b62000ef48782860162000ad0565b60208301525060408301518281111562000f0d57600080fd5b62000f1b8782860162000c23565b60408301525062000f2f6060840162000c11565b606082015262000f426080840162000c11565b608082015262000f5560a0840162000c11565b60a082015262000f6860c0840162000c11565b60c082015262000f7b60e0840162000cbe565b60e082015261010062000f9081850162000cbe565b90820152610120838101518381111562000fa957600080fd5b62000fb78882870162000cd6565b828401525050610140808401518381111562000fd257600080fd5b62000fe08882870162000dfc565b828401525050610160808401518381111562000ffb57600080fd5b620010098882870162000dfc565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200105357634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152600082518060208401526200107b8160408501602087016200097e565b601f01601f19169190910160400192915050565b600181811c90821680620010a457607f821691505b60208210811415620010c657634e487b7160e01b600052602260045260246000fd5b50919050565b61376680620010dc6000396000f3fe6080604052600436106101965760003560e01c806394d8088c116100e1578063c10c35461161008a578063d93fabfa11610064578063d93fabfa146104f4578063e03ff71414610514578063f0f4426014610535578063f64bfaba1461055557600080fd5b8063c10c354614610470578063c1cc57b014610490578063d3d59e26146104b257600080fd5b8063bbf89803116100bb578063bbf89803146103f5578063bcddb9f614610415578063bd0ae2311461044257600080fd5b806394d8088c14610384578063a0b4331a146103c0578063b81c78ec146103d357600080fd5b806358194312116101435780636f75b00c1161011d5780636f75b00c146103225780637cb9cf54146103425780637ee454cb1461036257600080fd5b806358194312146102d3578063637e2406146102e65780636bb518031461030057600080fd5b806333d27b5f1161017457806333d27b5f146102135780633ffb090714610282578063471bce56146102b357600080fd5b80630547be291461019b57806313af4035146101d15780631842476b146101f3575b600080fd5b3480156101a757600080fd5b506003546101ba90610100900460ff1681565b60405160ff90911681526020015b60405180910390f35b3480156101dd57600080fd5b506101f16101ec366004612d3e565b61056a565b005b3480156101ff57600080fd5b506003546101ba9062010000900460ff1681565b34801561021f57600080fd5b5061023361022e366004612d59565b61061d565b6040805196875261ffff958616602088015273ffffffffffffffffffffffffffffffffffffffff90941693860193909352908316606085015291909116608083015260a082015260c0016101c8565b34801561028e57600080fd5b506102a261029d366004612d59565b6106b2565b6040516101c8959493929190612ddd565b3480156102bf57600080fd5b506102a26102ce366004612d59565b61078d565b6101f16102e1366004612e32565b61079d565b3480156102f257600080fd5b506003546101ba9060ff1681565b34801561030c57600080fd5b50610315610e7d565b6040516101c89190612ebc565b34801561032e57600080fd5b506101f161033d366004612d3e565b610fdd565b34801561034e57600080fd5b506101f161035d366004612d3e565b61121e565b34801561036e57600080fd5b506103776113fb565b6040516101c89190612fa4565b34801561039057600080fd5b506103a461039f366004612d59565b6114d2565b6040805161ffff909316835260ff9091166020830152016101c8565b6101f16103ce366004612e32565b611501565b3480156103df57600080fd5b506103e8611d13565b6040516101c89190612ffe565b34801561040157600080fd5b506101f1610410366004612d3e565b611e8e565b34801561042157600080fd5b506104356104303660046130fd565b61202f565b6040516101c89190613174565b34801561044e57600080fd5b5061046261045d366004613242565b6122d2565b6040519081526020016101c8565b34801561047c57600080fd5b506101f161048b366004612d3e565b6122f6565b34801561049c57600080fd5b506104a56123a4565b6040516101c8919061326e565b3480156104be57600080fd5b506104d26104cd366004613443565b612622565b60408051825161ffff16815260209283015160ff1692810192909252016101c8565b34801561050057600080fd5b506101f161050f366004612d3e565b612682565b34801561052057600080fd5b506003546101ba906301000000900460ff1681565b34801561054157600080fd5b506101f1610550366004612d3e565b612823565b34801561056157600080fd5b506103776128d9565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146105d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6006818154811061062d57600080fd5b600091825260209091206004909102018054600182015460029092015490925061ffff8083169273ffffffffffffffffffffffffffffffffffffffff6201000082041692760100000000000000000000000000000000000000000000820483169278010000000000000000000000000000000000000000000000009092049091169086565b600081815481106106c257600080fd5b60009182526020909120600490910201805460018201805461ffff8084169550620100008404811694640100000000909404169291906107019061351a565b80601f016020809104026020016040519081016040528092919081815260200182805461072d9061351a565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050506002909301549192505060ff1685565b600181815481106106c257600080fd5b6103e88261ffff16106107f25760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642070757269747900000000000000000000000000000000000060448201526064016105cd565b60008361ffff16116108465760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e6974730000000000000000000000000000000000000060448201526064016105cd565b600081116108965760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b20505055000000000000000000000000000000000060448201526064016105cd565b600080610aba866005805480602002602001604051908101604052809291908181526020016000905b82821015610ab15783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546108fc9061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546109289061351a565b80156109755780601f1061094a57610100808354040283529160200191610975565b820191906000526020600020905b81548152906001019060200180831161095857829003601f168201915b5050505050815260200160028201805461098e9061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546109ba9061351a565b8015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b50505050508152602001600382018054610a209061351a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4c9061351a565b8015610a995780601f10610a6e57610100808354040283529160200191610a99565b820191906000526020600020905b815481529060010190602001808311610a7c57829003601f168201915b505050505081525050815260200190600101906108bf565b50505050612a40565b9150915081610b0b5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f757263650000000000000000000000000000000060448201526064016105cd565b60006040518060e00160405280600181526020018861ffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018761ffff1681526020018661ffff168152602001858152602001600167ffffffffffffffff811115610b7957610b7961332a565b604051908082528060200260200182016040528015610ba2578160200160208202803683370190505b50905290506000610bb3600161202f565b905060005b81518161ffff161015610c2657818161ffff1681518110610bdb57610bdb61356e565b6020026020010151600001518360c001518261ffff1681518110610c0157610c0161356e565b61ffff9092166020928302919091019091015280610c1e816135cc565b915050610bb8565b506000805b82518160ff161015610cd457610c6e838260ff1681518110610c4f57610c4f61356e565b60200260200101516040015161ffff1683612aa590919063ffffffff16565b50610cc1610cba610c94866060015161ffff168760a00151612ab190919063ffffffff16565b858460ff1681518110610ca957610ca961356e565b6020026020010151602001516122d2565b8390612aa5565b5080610ccc816135ee565b915050610c2b565b5080341015610d255760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f7220666565730000000060448201526064016105cd565b610d2e81612abd565b826006600081548110610d4357610d4361356e565b600091825260209182902083516004909202019081558282015160018201805460408601516060870151608088015161ffff9081167801000000000000000000000000000000000000000000000000027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff92821676010000000000000000000000000000000000000000000002929092167fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff90941662010000027fffffffffffffffffffff00000000000000000000000000000000000000000000909516919096161792909217169290921791909117905560a0830151600282015560c083015180519192610e6f92600385019290910190612c57565b505050505050505050505050565b60606006805480602002602001604051908101604052809291908181526020016000905b82821015610fd45760008481526020908190206040805160e0810182526004860290920180548352600181015461ffff8082168587015273ffffffffffffffffffffffffffffffffffffffff62010000830416858501527601000000000000000000000000000000000000000000008204811660608601527801000000000000000000000000000000000000000000000000909104166080840152600281015460a08401526003810180548351818702810187019094528084529394919360c086019392830182828015610fbc57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610f835790505b50505050508152505081526020019060010190610ea1565b50505050905090565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146110445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b6000806110b88360098054806020026020016040519081016040528092919081815260200182805480156110ae57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611083575b5050505050612b92565b9150915081156111d157600980546110d29060019061360e565b815481106110e2576110e261356e565b6000918252602090912001546009805473ffffffffffffffffffffffffffffffffffffffff909216918390811061111b5761111b61356e565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980548061117457611174613625565b60008281526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055505050565b60405162461bcd60e51b815260206004820152601860248201527f42757965722064697361626c6564206f7220616273656e74000000000000000060448201526064016105cd565b505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146112855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b6000806112f78360088054806020026020016040519081016040528092919081815260200182805480156110ae5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611083575050505050612b92565b9150915081156113b357600880546113119060019061360e565b815481106113215761132161356e565b6000918252602090912001546008805473ffffffffffffffffffffffffffffffffffffffff909216918390811061135a5761135a61356e565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600880548061117457611174613625565b60405162461bcd60e51b815260206004820181905260248201527f427579657220616c72656164792064697361626c6564206f7220616273656e7460448201526064016105cd565b600a5460609073ffffffffffffffffffffffffffffffffffffffff1633146114655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b60088054806020026020016040519081016040528092919081815260200182805480156114c857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161149d575b5050505050905090565b600281815481106114e257600080fd5b60009182526020909120015461ffff8116915062010000900460ff1682565b6103e88261ffff16106115565760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642070757269747900000000000000000000000000000000000060448201526064016105cd565b60008361ffff16116115aa5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e6974730000000000000000000000000000000000000060448201526064016105cd565b600081116115fa5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b20505055000000000000000000000000000000000060448201526064016105cd565b600080611815866005805480602002602001604051908101604052809291908181526020016000905b82821015610ab15783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546116609061351a565b80601f016020809104026020016040519081016040528092919081815260200182805461168c9061351a565b80156116d95780601f106116ae576101008083540402835291602001916116d9565b820191906000526020600020905b8154815290600101906020018083116116bc57829003601f168201915b505050505081526020016002820180546116f29061351a565b80601f016020809104026020016040519081016040528092919081815260200182805461171e9061351a565b801561176b5780601f106117405761010080835404028352916020019161176b565b820191906000526020600020905b81548152906001019060200180831161174e57829003601f168201915b505050505081526020016003820180546117849061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546117b09061351a565b80156117fd5780601f106117d2576101008083540402835291602001916117fd565b820191906000526020600020905b8154815290600101906020018083116117e057829003601f168201915b50505050508152505081526020019060010190611623565b91509150816118665760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f757263650000000000000000000000000000000060448201526064016105cd565b6000604051806101000160405280600181526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018861ffff1681526020018761ffff1681526020018661ffff168152602001858152602001600167ffffffffffffffff8111156118d5576118d561332a565b6040519080825280602002602001820160405280156118fe578160200160208202803683370190505b508152602001600061ffff168152509050600061191b600161202f565b604080516001808252818301909252919250600091906020808301908036833701905050905060005b82518161ffff1610156119b257828161ffff16815181106119675761196761356e565b6020026020010151600001518460c001518261ffff168151811061198d5761198d61356e565b61ffff90921660209283029190910190910152806119aa816135cc565b915050611944565b506000806119bf85612622565b805161ffff90811660e0880152606087015160a08801519293506000926119f7926119ea9216612ab1565b836020015160ff166122d2565b905060005b8660c00151518160ff161015611a9857611a43868260ff1681518110611a2457611a2461356e565b60200260200101516040015161ffff1685612aa590919063ffffffff16565b50611a85611a7e611a69896060015161ffff168a60a00151612ab190919063ffffffff16565b888460ff1681518110610ca957610ca961356e565b8590612aa5565b5080611a90816135ee565b9150506119fc565b50611aa38382612aa5565b341015611af25760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f7220666565730000000060448201526064016105cd565b611afb83612abd565b611b0483612c0b565b6007805460018101825560009190915286517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860059092029182019081556020808901517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6898401805460408c015160608d015160808e015173ffffffffffffffffffffffffffffffffffffffff9095167fffffffffffffffffffff00000000000000000000000000000000000000000000909316929092177401000000000000000000000000000000000000000061ffff92831602177fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff16760100000000000000000000000000000000000000000000928216929092027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff16919091177801000000000000000000000000000000000000000000000000919093160291909117905560a08901517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a84015560c089015180518a94611cc8937fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b909101920190612c57565b5060e09190910151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff909216919091179055505050505050505050505050565b60606007805480602002602001604051908101604052809291908181526020016000905b82821015610fd457600084815260209081902060408051610100810182526005860290920180548352600181015473ffffffffffffffffffffffffffffffffffffffff81168486015261ffff7401000000000000000000000000000000000000000082048116858501527601000000000000000000000000000000000000000000008204811660608601527801000000000000000000000000000000000000000000000000909104166080840152600281015460a08401526003810180548351818702810187019094528084529394919360c086019392830182828015611e6557602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411611e2c5790505b50505091835250506004919091015461ffff166020918201529082526001929092019101611d37565b600a5473ffffffffffffffffffffffffffffffffffffffff163314611ef55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b600080611f678360098054806020026020016040519081016040528092919081815260200182805480156110ae5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611083575050505050612b92565b9150915081611fe757600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f427579657220616c726561647920616c6c6f776564210000000000000000000060448201526064016105cd565b60408051600180825281830190925260609160009190816020015b6040805160c081018252600080825260208083018290529282018190526060808301819052608083019190915260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161204a579050509050826120da5760016000815481106120c7576120c761356e565b90600052602060002090600402016120fc565b600080815481106120ed576120ed61356e565b90600052602060002090600402015b6040805160c081018252825461ffff80821683526201000082048116602084015264010000000090910416918101919091526001820180549192916060840191906121469061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546121729061351a565b80156121bf5780601f10612194576101008083540402835291602001916121bf565b820191906000526020600020905b8154815290600101906020018083116121a257829003601f168201915b5050509183525050600282015460ff161515602080830191909152600383018054604080518285028101850182528281529401939260009084015b828210156122a65783829060005260206000200180546122199061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546122459061351a565b80156122925780601f1061226757610100808354040283529160200191612292565b820191906000526020600020905b81548152906001019060200180831161227557829003601f168201915b5050505050815260200190600101906121fa565b5050505081525050816000815181106122c1576122c161356e565b602090810291909101015292915050565b60006127106122e58461ffff8516612ab1565b6122ef9190613654565b9392505050565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461235d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600a5460609073ffffffffffffffffffffffffffffffffffffffff16331461240e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b6005805480602002602001604051908101604052809291908181526020016000905b82821015610fd457838290600052602060002090600402016040518060800160405290816000820154815260200160018201805461246d9061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546124999061351a565b80156124e65780601f106124bb576101008083540402835291602001916124e6565b820191906000526020600020905b8154815290600101906020018083116124c957829003601f168201915b505050505081526020016002820180546124ff9061351a565b80601f016020809104026020016040519081016040528092919081815260200182805461252b9061351a565b80156125785780601f1061254d57610100808354040283529160200191612578565b820191906000526020600020905b81548152906001019060200180831161255b57829003601f168201915b505050505081526020016003820180546125919061351a565b80601f01602080910402602001604051908101604052809291908181526020018280546125bd9061351a565b801561260a5780601f106125df5761010080835404028352916020019161260a565b820191906000526020600020905b8154815290600101906020018083116125ed57829003601f168201915b50505050508152505081526020019060010190612430565b60408051808201909152600080825260208201526000600260008154811061264c5761264c61356e565b60009182526020918290206040805180820190915291015461ffff8116825262010000900460ff16918101919091529392505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146126e95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b60008061275b8360088054806020026020016040519081016040528092919081815260200182805480156110ae5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611083575050505050612b92565b91509150816127db57600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f53656c6c657220616c726561647920616c6c6f7765640000000000000000000060448201526064016105cd565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461288a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b6003805473ffffffffffffffffffffffffffffffffffffffff909216640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff909216919091179055565b600a5460609073ffffffffffffffffffffffffffffffffffffffff1633146129435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b60098054806020026020016040519081016040528092919081815260200182805480156114c85760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161149d575050505050905090565b612a3d816040516024016129c2919061368f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052612c36565b50565b60008060005b8351811015612a95578461ffff16848281518110612a6657612a6661356e565b6020026020010151600001511415612a8357600192509050612a9e565b80612a8d816136a2565b915050612a46565b50600080915091505b9250929050565b60006122ef82846136db565b60006122ef82846136f3565b600080600360049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040515b60006040518083038185875af1925050503d8060008114612b3b576040519150601f19603f3d011682016040523d82523d6000602084013e612b40565b606091505b5091509150816112195760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420657468657200000000000000000000000060448201526064016105cd565b60008060005b8351811015612a95578473ffffffffffffffffffffffffffffffffffffffff16848281518110612bca57612bca61356e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415612bf957600192509050612a9e565b80612c03816136a2565b915050612b98565b600454604051600091829173ffffffffffffffffffffffffffffffffffffffff909116908490612afe565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805482825590600052602060002090600f01601090048101928215612cf05791602002820160005b83821115612cc057835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302612c80565b8015612cee5782816101000a81549061ffff0219169055600201602081600101049283019260010302612cc0565b505b50612cfc929150612d00565b5090565b5b80821115612cfc5760008155600101612d01565b803573ffffffffffffffffffffffffffffffffffffffff81168114612d3957600080fd5b919050565b600060208284031215612d5057600080fd5b6122ef82612d15565b600060208284031215612d6b57600080fd5b5035919050565b6000815180845260005b81811015612d9857602081850181015186830182015201612d7c565b81811115612daa576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061ffff8088168352808716602084015280861660408401525060a06060830152612e0c60a0830185612d72565b905082151560808301529695505050505050565b803561ffff81168114612d3957600080fd5b60008060008060808587031215612e4857600080fd5b612e5185612e20565b9350612e5f60208601612e20565b9250612e6d60408601612e20565b9396929550929360600135925050565b600081518084526020808501945080840160005b83811015612eb157815161ffff1687529582019590820190600101612e91565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612f96578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805184528781015161ffff908116898601528782015173ffffffffffffffffffffffffffffffffffffffff16888601526060808301518216908601526080808301519091169085015260a0808201519085015260c09081015160e091850182905290612f8281860183612e7d565b968901969450505090860190600101612ee3565b509098975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612ff257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612fc0565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612f96577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281516101008151855273ffffffffffffffffffffffffffffffffffffffff89830151168986015261ffff88830151168886015260608083015161309c8288018261ffff169052565b505060808281015161ffff169086015260a0808301519086015260c0808301518187018390526130ce83880182612e7d565b9250505060e08083015192506130e98187018461ffff169052565b509588019593505090860190600101613025565b60006020828403121561310f57600080fd5b813580151581146122ef57600080fd5b600081518084526020808501808196508360051b8101915082860160005b85811015613167578284038952613155848351612d72565b9885019893509084019060010161313d565b5091979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612f96577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160c061ffff808351168652808a840151168a8701528089840151168987015250606080830151828288015261320383880182612d72565b925050506080808301511515818701525060a0808301519250858203818701525061322e818361311f565b96890196945050509086019060010161319b565b6000806040838503121561325557600080fd5b8235915061326560208401612e20565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612f96577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160808151855288820151818a8701526132e182870182612d72565b91505087820151858203898701526132f98282612d72565b915050606080830151925085820381870152506133168183612d72565b968901969450505090860190600101613295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561337d5761337d61332a565b60405290565b600082601f83011261339457600080fd5b8135602067ffffffffffffffff808311156133b1576133b161332a565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156133f4576133f461332a565b60405293845285810183019383810192508785111561341257600080fd5b83870191505b848210156134385761342982612e20565b83529183019190830190613418565b979650505050505050565b60006020828403121561345557600080fd5b813567ffffffffffffffff8082111561346d57600080fd5b90830190610100828603121561348257600080fd5b61348a613359565b8235815261349a60208401612d15565b60208201526134ab60408401612e20565b60408201526134bc60608401612e20565b60608201526134cd60808401612e20565b608082015260a083013560a082015260c0830135828111156134ee57600080fd5b6134fa87828601613383565b60c08301525061350c60e08401612e20565b60e082015295945050505050565b600181811c9082168061352e57607f821691505b60208210811415613568577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061ffff808316818114156135e4576135e461359d565b6001019392505050565b600060ff821660ff8114156136055761360561359d565b60010192915050565b6000828210156136205761362061359d565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008261368a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6020815260006122ef6020830184612d72565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136d4576136d461359d565b5060010190565b600082198211156136ee576136ee61359d565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561372b5761372b61359d565b50029056fea264697066735822122000638cf05f190dbc8396671252061bc6ac45f14f6b97b66db9a6fd6ef44ae4f764736f6c63430008090033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(params, overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
