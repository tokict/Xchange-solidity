/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Controller,
  ControllerInterface,
  ConstructorParamsStruct,
} from "../Controller";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
              {
                internalType: "uint16",
                name: "amount",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee",
            name: "askFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
              {
                internalType: "uint16",
                name: "amount",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee",
            name: "bidFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
              {
                internalType: "uint16",
                name: "amount",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee",
            name: "marginFee",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "numberOfPeriodsPerDay",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodDurationInMinutes",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartHour",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartMinute",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "treasuryWallet",
            type: "address",
          },
          {
            internalType: "address",
            name: "escrowWallet",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "measurementUnit",
                type: "string",
              },
            ],
            internalType: "struct Resource[]",
            name: "resources",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "sellers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "buyers",
            type: "address[]",
          },
        ],
        internalType: "struct ConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "addBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "addSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "askFee",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bidFee",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAsks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "asker",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "askPPU",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceAsk[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceBid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResources",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "measurementUnit",
            type: "string",
          },
        ],
        internalType: "struct Resource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFee",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPeriodsPerDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDurationInMinutes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "removeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "removeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEscrow",
        type: "address",
      },
    ],
    name: "setEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    name: "submitAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "bidPPU",
        type: "uint256",
      },
    ],
    name: "submitBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200320238038062003202833981016040819052620000349162000b3b565b6200007f6040518060400160405280601481526020017f4465706c6f79696e6720436f6e74726f6c6c6572000000000000000000000000815250620004a260201b62001db41760201c565b80518051600090815560208083015160018054604086015161ffff166101000262ffffff1990911660ff9093169290921791909117905560608301518051620000cd92600292019062000511565b50608082015160038201805460ff191691151591909117905560a0820151805162000103916004840191602090910190620005a0565b505050602080820151805160059081558183015160068054604085015161ffff166101000262ffffff1990911660ff9093169290921791909117905560608201518051929391926200015a92600792019062000511565b50608082015160038201805460ff191691151591909117905560a0820151805162000190916004840191602090910190620005a0565b5050506040808201518051600a908155602080830151600b80549585015161ffff166101000262ffffff1990961660ff90921691909117949094179093556060820151805192939192620001e992600c92019062000511565b50608082015160038201805460ff191691151591909117905560a082015180516200021f916004840191602090910190620005a0565b5050506060810151600f8054608084015160a085015160c086015160e087015160ff96871661ffff199095169490941761010093871684021763ffff00001916620100009287169290920263ff0000001916919091176301000000959091169490940293909317600160201b600160c01b0319166401000000006001600160a01b03928316021790915590820151601080546001600160a01b0319169190921617905560005b81610160015151811015620003405760158261016001518281518110620002f057620002f062000cee565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620003378162000d04565b915050620002c5565b5060005b81610140015151811015620003bf57601482610140015182815181106200036f576200036f62000cee565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620003b68162000d04565b91505062000344565b5060005b81610120015151811015620004885760118261012001518281518110620003ee57620003ee62000cee565b60209081029190910181015182546001818101855560009485529383902082516004909202019081558183015180519294919362000433939285019291019062000511565b50604082015180516200045191600284019160209091019062000511565b50606082015180516200046f91600384019160209091019062000511565b50505080806200047f9062000d04565b915050620003c3565b5050601680546001600160a01b0319163317905562000da0565b620004ed81604051602401620004b9919062000d2e565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b17909152620004f016565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546200051f9062000d63565b90600052602060002090601f0160209004810192826200054357600085556200058e565b82601f106200055e57805160ff19168380011785556200058e565b828001600101855582156200058e579182015b828111156200058e57825182559160200191906001019062000571565b506200059c92915062000600565b5090565b828054828255906000526020600020908101928215620005f2579160200282015b82811115620005f25782518051620005e191849160209091019062000511565b5091602001919060010190620005c1565b506200059c92915062000617565b5b808211156200059c576000815560010162000601565b808211156200059c5760006200062e828262000638565b5060010162000617565b508054620006469062000d63565b6000825580601f1062000657575050565b601f016020900490600052602060002090810190620004ed919062000600565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715620006b257620006b262000677565b60405290565b604051608081016001600160401b0381118282101715620006b257620006b262000677565b60405161018081016001600160401b0381118282101715620006b257620006b262000677565b604051601f8201601f191681016001600160401b03811182821017156200072e576200072e62000677565b604052919050565b805160ff811681146200074857600080fd5b919050565b805161ffff811681146200074857600080fd5b60005b838110156200077d57818101518382015260200162000763565b838111156200078d576000848401525b50505050565b600082601f830112620007a557600080fd5b81516001600160401b03811115620007c157620007c162000677565b620007d6601f8201601f191660200162000703565b818152846020838601011115620007ec57600080fd5b620007ff82602083016020870162000760565b949350505050565b805180151581146200074857600080fd5b60006001600160401b0382111562000834576200083462000677565b5060051b60200190565b600082601f8301126200085057600080fd5b8151602062000869620008638362000818565b62000703565b82815260059290921b840181019181810190868411156200088957600080fd5b8286015b84811015620008cd5780516001600160401b03811115620008ae5760008081fd5b620008be8986838b010162000793565b8452509183019183016200088d565b509695505050505050565b600060c08284031215620008eb57600080fd5b620008f56200068d565b905081518152620009096020830162000736565b60208201526200091c604083016200074d565b604082015260608201516001600160401b03808211156200093c57600080fd5b6200094a8583860162000793565b60608401526200095d6080850162000807565b608084015260a08401519150808211156200097757600080fd5b5062000986848285016200083e565b60a08301525092915050565b80516001600160a01b03811681146200074857600080fd5b600082601f830112620009bc57600080fd5b81516020620009cf620008638362000818565b82815260059290921b84018101918181019086841115620009ef57600080fd5b8286015b84811015620008cd5780516001600160401b038082111562000a155760008081fd5b908801906080828b03601f190181131562000a305760008081fd5b62000a3a620006b8565b8784015181526040808501518481111562000a555760008081fd5b62000a658e8b8389010162000793565b8a840152506060808601518581111562000a7f5760008081fd5b62000a8f8f8c838a010162000793565b848401525092850151928484111562000aaa57600091508182fd5b62000aba8e8b8689010162000793565b90830152508652505050918301918301620009f3565b600082601f83011262000ae257600080fd5b8151602062000af5620008638362000818565b82815260059290921b8401810191818101908684111562000b1557600080fd5b8286015b84811015620008cd5762000b2d8162000992565b835291830191830162000b19565b60006020828403121562000b4e57600080fd5b81516001600160401b038082111562000b6657600080fd5b90830190610180828603121562000b7c57600080fd5b62000b86620006dd565b82518281111562000b9657600080fd5b62000ba487828601620008d8565b82525060208301518281111562000bba57600080fd5b62000bc887828601620008d8565b60208301525060408301518281111562000be157600080fd5b62000bef87828601620008d8565b60408301525062000c036060840162000736565b606082015262000c166080840162000736565b608082015262000c2960a0840162000736565b60a082015262000c3c60c0840162000736565b60c082015262000c4f60e0840162000992565b60e082015261010062000c6481850162000992565b90820152610120838101518381111562000c7d57600080fd5b62000c8b88828701620009aa565b828401525050610140808401518381111562000ca657600080fd5b62000cb48882870162000ad0565b828401525050610160808401518381111562000ccf57600080fd5b62000cdd8882870162000ad0565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000d2757634e487b7160e01b600052601160045260246000fd5b5060010190565b602081526000825180602084015262000d4f81604085016020870162000760565b601f01601f19169190910160400192915050565b600181811c9082168062000d7857607f821691505b6020821081141562000d9a57634e487b7160e01b600052602260045260246000fd5b50919050565b6124528062000db06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063a0b4331a116100d8578063c1cc57b01161008c578063e14a211511610066578063e14a2115146102e8578063f0f44260146102f0578063f64bfaba1461030357600080fd5b8063c1cc57b0146102ac578063d93fabfa146102c1578063e03ff714146102d457600080fd5b8063b81c78ec116100bd578063b81c78ec14610271578063bbf8980314610286578063c10c35461461029957600080fd5b8063a0b4331a14610256578063b67df1c31461026957600080fd5b8063637e24061161012f5780636f75b00c116101145780636f75b00c1461021b5780637cb9cf541461022e5780637ee454cb1461024157600080fd5b8063637e2406146101f95780636bb518031461020657600080fd5b80631842476b116101605780631842476b146101ba5780633dbae55b146101cd57806358194312146101e657600080fd5b80630547be291461017c57806313af4035146101a5575b600080fd5b600f5461018e90610100900460ff1681565b60405160ff90911681526020015b60405180910390f35b6101b86101b3366004611f45565b61030b565b005b600f5461018e9062010000900460ff1681565b6101d56103be565b60405161019c959493929190611fed565b6101b86101f4366004612044565b610473565b600f5461018e9060ff1681565b61020e61098a565b60405161019c919061208f565b6101b8610229366004611f45565b610a6d565b6101b861023c366004611f45565b610ca9565b610249610e86565b60405161019c9190612128565b6101b8610264366004612044565b610f5d565b6101d561147d565b6102796114a6565b60405161019c9190612182565b6101b8610294366004611f45565b611592565b6101b86102a7366004611f45565b611733565b6102b46117e1565b60405161019c919061220e565b6101b86102cf366004611f45565b611a5f565b600f5461018e906301000000900460ff1681565b6101d5611c00565b6101b86102fe366004611f45565b611c29565b610249611cdf565b60165473ffffffffffffffffffffffffffffffffffffffff1633146103775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b601680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805460015460028054929360ff83169361010090930461ffff16929091906103e7906122d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610413906122d8565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b5050506003909301549192505060ff1685565b6103e88261ffff16106104c85760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420707572697479000000000000000000000000000000000000604482015260640161036e565b60008361ffff161161051c5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e69747300000000000000000000000000000000000000604482015260640161036e565b6000811161056c5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b205050550000000000000000000000000000000000604482015260640161036e565b600080610790866011805480602002602001604051908101604052809291908181526020016000905b828210156107875783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546105d2906122d8565b80601f01602080910402602001604051908101604052809291908181526020018280546105fe906122d8565b801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b50505050508152602001600282018054610664906122d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610690906122d8565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b505050505081526020016003820180546106f6906122d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610722906122d8565b801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b50505050508152505081526020019060010190610595565b50505050611e46565b91509150816107e15760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f7572636500000000000000000000000000000000604482015260640161036e565b50506040805160c081018252600180825261ffff9687166020830190815233938301938452958716606083019081529487166080830190815260a0830194855260128054928301815560005291517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344460039092029182015594517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3445860180549351955192519188167fffffffffffffffffffff00000000000000000000000000000000000000000000909416939093176201000073ffffffffffffffffffffffffffffffffffffffff90961695909502949094177fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff16760100000000000000000000000000000000000000000000918716919091027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff16177801000000000000000000000000000000000000000000000000939095169290920293909317905590517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344690910155565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610a645760008481526020908190206040805160c081018252600386029092018054835260018082015461ffff8082168688015273ffffffffffffffffffffffffffffffffffffffff62010000830416948601949094527601000000000000000000000000000000000000000000008104841660608601527801000000000000000000000000000000000000000000000000900490921660808401526002015460a083015290835290920191016109ae565b50505050905090565b60165473ffffffffffffffffffffffffffffffffffffffff163314610ad45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b600080610b48836015805480602002602001604051908101604052809291908181526020018280548015610b3e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b13575b5050505050611eab565b915091508115610c615760158054610b629060019061235b565b81548110610b7257610b72612372565b6000918252602090912001546015805473ffffffffffffffffffffffffffffffffffffffff9092169183908110610bab57610bab612372565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506015805480610c0457610c046123a1565b60008281526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055505050565b60405162461bcd60e51b815260206004820152601860248201527f42757965722064697361626c6564206f7220616273656e740000000000000000604482015260640161036e565b60165473ffffffffffffffffffffffffffffffffffffffff163314610d105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b600080610d82836014805480602002602001604051908101604052809291908181526020018280548015610b3e5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b13575050505050611eab565b915091508115610e3e5760148054610d9c9060019061235b565b81548110610dac57610dac612372565b6000918252602090912001546014805473ffffffffffffffffffffffffffffffffffffffff9092169183908110610de557610de5612372565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506014805480610c0457610c046123a1565b60405162461bcd60e51b815260206004820181905260248201527f427579657220616c72656164792064697361626c6564206f7220616273656e74604482015260640161036e565b60165460609073ffffffffffffffffffffffffffffffffffffffff163314610ef05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b6014805480602002602001604051908101604052809291908181526020018280548015610f5357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f28575b5050505050905090565b6103e88261ffff1610610fb25760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420707572697479000000000000000000000000000000000000604482015260640161036e565b60008361ffff16116110065760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e69747300000000000000000000000000000000000000604482015260640161036e565b600081116110565760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b205050550000000000000000000000000000000000604482015260640161036e565b600080611271866011805480602002602001604051908101604052809291908181526020016000905b828210156107875783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546110bc906122d8565b80601f01602080910402602001604051908101604052809291908181526020018280546110e8906122d8565b80156111355780601f1061110a57610100808354040283529160200191611135565b820191906000526020600020905b81548152906001019060200180831161111857829003601f168201915b5050505050815260200160028201805461114e906122d8565b80601f016020809104026020016040519081016040528092919081815260200182805461117a906122d8565b80156111c75780601f1061119c576101008083540402835291602001916111c7565b820191906000526020600020905b8154815290600101906020018083116111aa57829003601f168201915b505050505081526020016003820180546111e0906122d8565b80601f016020809104026020016040519081016040528092919081815260200182805461120c906122d8565b80156112595780601f1061122e57610100808354040283529160200191611259565b820191906000526020600020905b81548152906001019060200180831161123c57829003601f168201915b5050505050815250508152602001906001019061107f565b91509150816112c25760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f7572636500000000000000000000000000000000604482015260640161036e565b50506040805160c0810182526001808252336020830190815261ffff978816938301938452958716606083019081529487166080830190815260a0830194855260138054928301815560005291517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09060039092029182015594517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0918601805493519551925173ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffff00000000000000000000000000000000000000000000909416939093177401000000000000000000000000000000000000000095881695909502949094177fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff16760100000000000000000000000000000000000000000000918716919091027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff16177801000000000000000000000000000000000000000000000000939095169290920293909317905590517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09290910155565b600a8054600b54600c8054929360ff83169361010090930461ffff16929091906103e7906122d8565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610a645760008481526020908190206040805160c081018252600386029092018054835260018082015473ffffffffffffffffffffffffffffffffffffffff81168587015261ffff7401000000000000000000000000000000000000000082048116948601949094527601000000000000000000000000000000000000000000008104841660608601527801000000000000000000000000000000000000000000000000900490921660808401526002015460a083015290835290920191016114ca565b60165473ffffffffffffffffffffffffffffffffffffffff1633146115f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b60008061166b836015805480602002602001604051908101604052809291908181526020018280548015610b3e5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b13575050505050611eab565b91509150816116eb57601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47501805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f427579657220616c726561647920616c6c6f7765642100000000000000000000604482015260640161036e565b60165473ffffffffffffffffffffffffffffffffffffffff16331461179a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60165460609073ffffffffffffffffffffffffffffffffffffffff16331461184b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b6011805480602002602001604051908101604052809291908181526020016000905b82821015610a645783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546118aa906122d8565b80601f01602080910402602001604051908101604052809291908181526020018280546118d6906122d8565b80156119235780601f106118f857610100808354040283529160200191611923565b820191906000526020600020905b81548152906001019060200180831161190657829003601f168201915b5050505050815260200160028201805461193c906122d8565b80601f0160208091040260200160405190810160405280929190818152602001828054611968906122d8565b80156119b55780601f1061198a576101008083540402835291602001916119b5565b820191906000526020600020905b81548152906001019060200180831161199857829003601f168201915b505050505081526020016003820180546119ce906122d8565b80601f01602080910402602001604051908101604052809291908181526020018280546119fa906122d8565b8015611a475780601f10611a1c57610100808354040283529160200191611a47565b820191906000526020600020905b815481529060010190602001808311611a2a57829003601f168201915b5050505050815250508152602001906001019061186d565b60165473ffffffffffffffffffffffffffffffffffffffff163314611ac65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b600080611b38836014805480602002602001604051908101604052809291908181526020018280548015610b3e5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b13575050505050611eab565b9150915081611bb857601480546001810182556000919091527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec01805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f53656c6c657220616c726561647920616c6c6f77656400000000000000000000604482015260640161036e565b6005805460065460078054929360ff83169361010090930461ffff16929091906103e7906122d8565b60165473ffffffffffffffffffffffffffffffffffffffff163314611c905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b600f805473ffffffffffffffffffffffffffffffffffffffff909216640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff909216919091179055565b60165460609073ffffffffffffffffffffffffffffffffffffffff163314611d495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036e565b6015805480602002602001604051908101604052809291908181526020018280548015610f535760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f28575050505050905090565b611e4381604051602401611dc891906123d0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052611f24565b50565b60008060005b8351811015611e9b578461ffff16848281518110611e6c57611e6c612372565b6020026020010151600001511415611e8957600192509050611ea4565b80611e93816123e3565b915050611e4c565b50600080915091505b9250929050565b60008060005b8351811015611e9b578473ffffffffffffffffffffffffffffffffffffffff16848281518110611ee357611ee3612372565b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611f1257600192509050611ea4565b80611f1c816123e3565b915050611eb1565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215611f5757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611f7b57600080fd5b9392505050565b6000815180845260005b81811015611fa857602081850181015186830182015201611f8c565b81811115611fba576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b85815260ff8516602082015261ffff8416604082015260a06060820152600061201960a0830185611f82565b905082151560808301529695505050505050565b803561ffff8116811461203f57600080fd5b919050565b6000806000806080858703121561205a57600080fd5b6120638561202d565b93506120716020860161202d565b925061207f6040860161202d565b9396929550929360600135925050565b602080825282518282018190526000919060409081850190868401855b8281101561211b578151805185528681015161ffff908116888701528682015173ffffffffffffffffffffffffffffffffffffffff16878701526060808301518216908701526080808301519091169086015260a0908101519085015260c090930192908501906001016120ac565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561217657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612144565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561211b578151805185528681015173ffffffffffffffffffffffffffffffffffffffff16878601528581015161ffff908116878701526060808301518216908701526080808301519091169086015260a0908101519085015260c0909301929085019060010161219f565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156122ca577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160808151855288820151818a87015261228182870182611f82565b91505087820151858203898701526122998282611f82565b915050606080830151925085820381870152506122b68183611f82565b968901969450505090860190600101612235565b509098975050505050505050565b600181811c908216806122ec57607f821691505b60208210811415612326577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561236d5761236d61232c565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b602081526000611f7b6020830184611f82565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124155761241561232c565b506001019056fea2646970667358221220bfc8cabce3ad6b76a9759d9585b6c97e3a71fad8d56be8c52f02bd0126ef2dc364736f6c63430008090033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(params, overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
