/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Controller,
  ControllerInterface,
  ConstructorParamsStruct,
} from "../Controller";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "askFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "bidFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
            ],
            internalType: "struct MarginFee[]",
            name: "marginFees",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "numberOfPeriodsPerDay",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodDurationInMinutes",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartHour",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartMinute",
            type: "uint8",
          },
          {
            internalType: "address payable",
            name: "treasuryWallet",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "escrowWallet",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "measurementUnit",
                type: "string",
              },
            ],
            internalType: "struct Resource[]",
            name: "resources",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "sellers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "buyers",
            type: "address[]",
          },
        ],
        internalType: "struct ConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "acceptTradeOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "addBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "addSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "askFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theNumber",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
    ],
    name: "calculatePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "calculatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "periodId",
        type: "uint16",
      },
    ],
    name: "getAsks",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "asker",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "minUnits",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxUnits",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "askPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
        ],
        internalType: "struct ResourceAsk[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "periodId",
        type: "uint16",
      },
    ],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minUnits",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxUnits",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
          {
            internalType: "uint16",
            name: "marginFeeId",
            type: "uint16",
          },
        ],
        internalType: "struct ResourceBid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResources",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "measurementUnit",
            type: "string",
          },
        ],
        internalType: "struct Resource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "getTradeOffersForSeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "periodId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "units",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptedAt",
            type: "uint256",
          },
        ],
        internalType: "struct TradeOffer[]",
        name: "offers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPeriodId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marginFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPeriodsPerDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDurationInMinutes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isAsk",
        type: "bool",
      },
    ],
    name: "pickFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "percentage",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "feeType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "cumulative",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "noCombine",
            type: "string[]",
          },
        ],
        internalType: "struct Fee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "pickMarginFee",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "percentage",
            type: "uint8",
          },
        ],
        internalType: "struct MarginFee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "priceCalculations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "removeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "removeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "units",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "sendTradeOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newEscrow",
        type: "address",
      },
    ],
    name: "setEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minUnits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxUnits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    name: "submitAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minUnits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxUnits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "bidPPU",
        type: "uint256",
      },
    ],
    name: "submitBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeOffers",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "periodId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "units",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200529938038062005299833981016040819052620000349162000e78565b6200007f6040518060400160405280601481526020017f4465706c6f79696e6720436f6e74726f6c6c65720000000000000000000000008152506200068b60201b6200348a1760201c565b600081602001515111620000da5760405162461bcd60e51b815260206004820152601360248201527f4e6f20626964206665652070726f76696465640000000000000000000000000060448201526064015b60405180910390fd5b8051516200012b5760405162461bcd60e51b815260206004820152601360248201527f4e6f2061736b206665652070726f7669646564000000000000000000000000006044820152606401620000d1565b600081604001515111620001825760405162461bcd60e51b815260206004820152601660248201527f4e6f206d617267696e206665652070726f7669646564000000000000000000006044820152606401620000d1565b606081015160038054608084015160a085015160c086015160e087015161010080890151600480546001600160a01b0319166001600160a01b0392831617905560ff98891661ffff1990971696909617948816029390931763ffff00001916620100009287169290920263ff0000001916919091176301000000959091169490940293909317600160201b600160d01b0319166601000000000000919093160261ffff60201b191691909117905560005b81610160015151811015620002ae57600e82610160015182815181106200025e576200025e6200102b565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620002a58162001041565b91505062000233565b5060005b816101400151518110156200032d57600d8261014001518281518110620002dd57620002dd6200102b565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620003248162001041565b915050620002b2565b5060005b816101200151518110156200040657600582610120015182815181106200035c576200035c6200102b565b6020908102919091018101518254600180820185556000948552938390208251600490920201805461ffff191661ffff90921691909117815581830151805192949193620003b19392850192910190620006fa565b5060408201518051620003cf916002840191602090910190620006fa565b5060608201518051620003ed916003840191602090910190620006fa565b5050508080620003fd9062001041565b91505062000331565b5060005b815151811015620004f5576000826000015182815181106200043057620004306200102b565b602090810291909101810151825460018181018555600094855293839020825160059092020180548385015161ffff908116620100000263ffffffff1990921693169290921791909117815560408201519381019390935560608101518051919392620004a692600285019290910190620006fa565b50608082015160038201805460ff191691151591909117905560a08201518051620004dc91600484019160209091019062000789565b5050508080620004ec9062001041565b9150506200040a565b5060005b816020015151811015620005e7576001826020015182815181106200052257620005226200102b565b602090810291909101810151825460018181018555600094855293839020825160059092020180548385015161ffff908116620100000263ffffffff19909216931692909217919091178155604082015193810193909355606081015180519193926200059892600285019290910190620006fa565b50608082015160038201805460ff191691151591909117905560a08201518051620005ce91600484019160209091019062000789565b5050508080620005de9062001041565b915050620004f9565b5060005b81604001515181101562000671576002826040015182815181106200061457620006146200102b565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160ff16620100000262ffffff1990911661ffff9093169290921791909117905580620006688162001041565b915050620005eb565b5050600f80546001600160a01b03191633179055620010dd565b620006d681604051602401620006a291906200106b565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b17909152620006d916565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546200070890620010a0565b90600052602060002090601f0160209004810192826200072c576000855562000777565b82601f106200074757805160ff191683800117855562000777565b8280016001018555821562000777579182015b82811115620007775782518255916020019190600101906200075a565b5062000785929150620007e9565b5090565b828054828255906000526020600020908101928215620007db579160200282015b82811115620007db5782518051620007ca918491602090910190620006fa565b5091602001919060010190620007aa565b506200078592915062000800565b5b80821115620007855760008155600101620007ea565b808211156200078557600062000817828262000821565b5060010162000800565b5080546200082f90620010a0565b6000825580601f1062000840575050565b601f016020900490600052602060002090810190620006d69190620007e9565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156200089b576200089b62000860565b60405290565b604080519081016001600160401b03811182821017156200089b576200089b62000860565b604051608081016001600160401b03811182821017156200089b576200089b62000860565b60405161018081016001600160401b03811182821017156200089b576200089b62000860565b604051601f8201601f191681016001600160401b03811182821017156200093c576200093c62000860565b604052919050565b60006001600160401b0382111562000960576200096062000860565b5060051b60200190565b805161ffff811681146200097d57600080fd5b919050565b60005b838110156200099f57818101518382015260200162000985565b83811115620009af576000848401525b50505050565b600082601f830112620009c757600080fd5b81516001600160401b03811115620009e357620009e362000860565b620009f8601f8201601f191660200162000911565b81815284602083860101111562000a0e57600080fd5b62000a2182602083016020870162000982565b949350505050565b805180151581146200097d57600080fd5b600082601f83011262000a4c57600080fd5b8151602062000a6562000a5f8362000944565b62000911565b82815260059290921b8401810191818101908684111562000a8557600080fd5b8286015b8481101562000ac95780516001600160401b0381111562000aaa5760008081fd5b62000aba8986838b0101620009b5565b84525091830191830162000a89565b509695505050505050565b600082601f83011262000ae657600080fd5b8151602062000af962000a5f8362000944565b82815260059290921b8401810191818101908684111562000b1957600080fd5b8286015b8481101562000ac95780516001600160401b038082111562000b3f5760008081fd5b9088019060c0828b03601f190181131562000b5a5760008081fd5b62000b6462000876565b62000b718885016200096a565b8152604062000b828186016200096a565b898301526060808601518284015260809150818601518581111562000ba75760008081fd5b62000bb78f8c838a0101620009b5565b82850152505060a062000bcc81870162000a29565b8383015292850151928484111562000be657600091508182fd5b62000bf68e8b8689010162000a3a565b9083015250865250505091830191830162000b1d565b805160ff811681146200097d57600080fd5b600082601f83011262000c3057600080fd5b8151602062000c4362000a5f8362000944565b82815260069290921b8401810191818101908684111562000c6357600080fd5b8286015b8481101562000ac9576040818903121562000c825760008081fd5b62000c8c620008a1565b62000c97826200096a565b815262000ca685830162000c0c565b8186015283529183019160400162000c67565b6001600160a01b0381168114620006d657600080fd5b80516200097d8162000cb9565b600082601f83011262000cee57600080fd5b8151602062000d0162000a5f8362000944565b82815260059290921b8401810191818101908684111562000d2157600080fd5b8286015b8481101562000ac95780516001600160401b038082111562000d475760008081fd5b908801906080828b03601f190181131562000d625760008081fd5b62000d6c620008c6565b62000d798885016200096a565b81526040808501518481111562000d905760008081fd5b62000da08e8b83890101620009b5565b8a840152506060808601518581111562000dba5760008081fd5b62000dca8f8c838a0101620009b5565b848401525092850151928484111562000de557600091508182fd5b62000df58e8b86890101620009b5565b9083015250865250505091830191830162000d25565b600082601f83011262000e1d57600080fd5b8151602062000e3062000a5f8362000944565b82815260059290921b8401810191818101908684111562000e5057600080fd5b8286015b8481101562000ac957805162000e6a8162000cb9565b835291830191830162000e54565b60006020828403121562000e8b57600080fd5b81516001600160401b038082111562000ea357600080fd5b90830190610180828603121562000eb957600080fd5b62000ec3620008eb565b82518281111562000ed357600080fd5b62000ee18782860162000ad4565b82525060208301518281111562000ef757600080fd5b62000f058782860162000ad4565b60208301525060408301518281111562000f1e57600080fd5b62000f2c8782860162000c1e565b60408301525062000f406060840162000c0c565b606082015262000f536080840162000c0c565b608082015262000f6660a0840162000c0c565b60a082015262000f7960c0840162000c0c565b60c082015262000f8c60e0840162000ccf565b60e082015261010062000fa181850162000ccf565b90820152610120838101518381111562000fba57600080fd5b62000fc88882870162000cdc565b828401525050610140808401518381111562000fe357600080fd5b62000ff18882870162000e0b565b82840152505061016080840151838111156200100c57600080fd5b6200101a8882870162000e0b565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200106457634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152600082518060208401526200108c81604085016020870162000982565b601f01601f19169190910160400192915050565b600181811c90821680620010b557607f821691505b60208210811415620010d757634e487b7160e01b600052602260045260246000fd5b50919050565b6141ac80620010ed6000396000f3fe6080604052600436106101d85760003560e01c80637ee454cb11610102578063c10c354611610095578063da051db311610064578063da051db314610650578063e03ff71414610663578063f0f4426014610684578063f64bfaba146106a457600080fd5b8063c10c3546146105d9578063c1cc57b0146105f9578063d348b4091461061b578063d93fabfa1461063057600080fd5b8063b40ff21a116100d1578063b40ff21a146104eb578063bbf898031461056c578063bcddb9f61461058c578063bd0ae231146105b957600080fd5b80637ee454cb1461042557806391667d221461044757806394d8088c146104825780639969bec2146104be57600080fd5b8063471bce561161017a578063637e240611610149578063637e24061461039e5780636f75b00c146103b85780637cb9cf54146103d85780637da33de8146103f857600080fd5b8063471bce56146103115780635158e16514610331578063573c9349146103515780635d5b90211461037e57600080fd5b80631b072317116101b65780631b0723171461025557806326a723321461028b5780632d6d973e1461029e5780633ffb0907146102e057600080fd5b80630547be29146101dd57806313af4035146102135780631842476b14610235575b600080fd5b3480156101e957600080fd5b506003546101fc90610100900460ff1681565b60405160ff90911681526020015b60405180910390f35b34801561021f57600080fd5b5061023361022e366004613741565b6106b9565b005b34801561024157600080fd5b506003546101fc9062010000900460ff1681565b34801561026157600080fd5b5060035461027890640100000000900461ffff1681565b60405161ffff909116815260200161020a565b610233610299366004613775565b61076c565b3480156102aa57600080fd5b506102be6102b93660046137d1565b610cf4565b60408051825161ffff16815260209283015160ff16928101929092520161020a565b3480156102ec57600080fd5b506103006102fb3660046137fb565b610d55565b60405161020a95949392919061387f565b34801561031d57600080fd5b5061030061032c3660046137fb565b610e2c565b34801561033d57600080fd5b5061023361034c3660046138c0565b610e3c565b34801561035d57600080fd5b5061037161036c366004613912565b6110c0565b60405161020a919061396c565b34801561038a57600080fd5b506102336103993660046137fb565b61124d565b3480156103aa57600080fd5b506003546101fc9060ff1681565b3480156103c457600080fd5b506102336103d3366004613741565b611399565b3480156103e457600080fd5b506102336103f3366004613741565b6115d5565b34801561040457600080fd5b50610418610413366004613912565b6117b2565b60405161020a9190613a6d565b34801561043157600080fd5b5061043a611956565b60405161020a9190613b7d565b34801561045357600080fd5b506104746104623660046137fb565b600b6020526000908152604090205481565b60405190815260200161020a565b34801561048e57600080fd5b506104a261049d3660046137fb565b611a2d565b6040805161ffff909316835260ff90911660208301520161020a565b3480156104ca57600080fd5b506104de6104d9366004613741565b611a5c565b60405161020a9190613bd7565b3480156104f757600080fd5b5061050b610506366004613ca3565b611c03565b6040805198895261ffff97881660208a0152959096169487019490945263ffffffff92909216606086015273ffffffffffffffffffffffffffffffffffffffff90811660808601521660a084015260c083015260e08201526101000161020a565b34801561057857600080fd5b50610233610587366004613741565b611c94565b34801561059857600080fd5b506105ac6105a7366004613cc5565b611e35565b60405161020a9190613ce7565b3480156105c557600080fd5b506104746105d4366004613e1f565b6120c7565b3480156105e557600080fd5b506102336105f4366004613741565b6120eb565b34801561060557600080fd5b5061060e612199565b60405161020a9190613e4b565b34801561062757600080fd5b50610233612427565b34801561063c57600080fd5b5061023361064b366004613741565b612afd565b61023361065e366004613775565b612c9e565b34801561066f57600080fd5b506003546101fc906301000000900460ff1681565b34801561069057600080fd5b5061023361069f366004613741565b6132fd565b3480156106b057600080fd5b5061043a6133b5565b600f5473ffffffffffffffffffffffffffffffffffffffff1633146107255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6103e88261ffff16106107c15760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420707572697479000000000000000000000000000000000000604482015260640161071c565b60008461ffff161180156107d9575060008361ffff16115b6108255760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e69747300000000000000000000000000000000000000604482015260640161071c565b600081116108755760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b205050550000000000000000000000000000000000604482015260640161071c565b60055461ffff8616106108ca5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f7572636500000000000000000000000000000000604482015260640161071c565b6040805161010081018252600180825261ffff8881166020840152338385015287811660608401528681166080840152851660a083015260c08201849052825181815280840190935260009260e083019181602001602082028036833750505090529050600061093a6001611e35565b905060005b81518161ffff1610156109ad57818161ffff168151811061096257610962613f3a565b6020026020010151600001518360e001518261ffff168151811061098857610988613f3a565b61ffff90921660209283029190910190910152806109a581613f98565b91505061093f565b506000805b82518160ff161015610a4d57828160ff16815181106109d3576109d3613f3a565b602002602001015160400151826109ea9190613fba565b9150610a2f846060015163ffffffff168560c00151610a099190613fd2565b848360ff1681518110610a1e57610a1e613f3a565b6020026020010151602001516120c7565b610a399083613fba565b915080610a458161400f565b9150506109b2565b5080341015610a9e5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f72206665657300000000604482015260640161071c565b8015610aad57610aad8161351c565b600660209081527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8805460018101825560009190915284517ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f36004909202918201805487850151604089015160608a015160808b015161ffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909516949094176201000093871693909302929092177fffffffff000000000000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff909216919091027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1617780100000000000000000000000000000000000000000000000063ffffffff92831602177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c0100000000000000000000000000000000000000000000000000000000919092160217815560a08701517ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f4840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016919093161790915560c08601517ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f583015560e0860151805187949293610ce7937ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f6909101920190613661565b5050505050505050505050565b604080518082019091526000808252602082015260006002600081548110610d1e57610d1e613f3a565b60009182526020918290206040805180820190915291015461ffff8116825262010000900460ff1691810191909152949350505050565b60008181548110610d6557600080fd5b600091825260209091206005909102018054600182015460028301805461ffff808516965062010000909404909316939192610da09061402f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcc9061402f565b8015610e195780601f10610dee57610100808354040283529160200191610e19565b820191906000526020600020905b815481529060010190602001808311610dfc57829003601f168201915b5050506003909301549192505060ff1685565b60018181548110610d6557600080fd5b6003546040805164010000000090920460f081901b7fffff000000000000000000000000000000000000000000000000000000000000166020808501919091527f5f000000000000000000000000000000000000000000000000000000000000006022850152606085901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660238501528251808503601701815260378501808552815191830191909120610137860185526000818152600990935293822054815261ffff9283166057860152918716607785015263ffffffff8616609785015273ffffffffffffffffffffffffffffffffffffffff851660b78501523360d7850152919260f701610f5142610e10613fba565b81526000602091820181905284815260098252604080822080546001808201835591845284842086516005909202019081558585015181830180548886015160608a015160808b015161ffff9586167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090941693909317620100009590921694909402177fffffffff000000000000000000000000000000000000000000000000ffffffff1664010000000063ffffffff909416939093027fffffffff0000000000000000000000000000000000000000ffffffffffffffff16929092176801000000000000000073ffffffffffffffffffffffffffffffffffffffff9384160217905560a08701516002830180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169190921617905560c0860151600382015560e090950151600490950194909455338252600a8352812080549384018155815220019190915550505050565b61ffff81166000908152600660209081526040808320805482518185028101850190935280835260609493849084015b82821015611241576000848152602090819020604080516101008101825260048602909201805461ffff808216855262010000820481168587015273ffffffffffffffffffffffffffffffffffffffff6401000000008304168585015263ffffffff78010000000000000000000000000000000000000000000000008304811660608701527c0100000000000000000000000000000000000000000000000000000000909204909116608085015260018201541660a0840152600281015460c08401526003810180548351818702810187019094528084529394919360e08601939283018282801561122957602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116111f05790505b505050505081525050815260200190600101906110f0565b50929695505050505050565b60035460405164010000000090910460f01b7fffff0000000000000000000000000000000000000000000000000000000000001660208201527f5f0000000000000000000000000000000000000000000000000000000000000060228201523360601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602382015260009060370160405160208183030381529060405280519060200120905060005b60008281526009602052604090205481101561139457600082815260096020526040902080548491908390811061133157611331613f3a565b906000526020600020906005020160000154141561138257600082815260096020526040902080544291908390811061136c5761136c613f3a565b9060005260206000209060050201600401819055505b8061138c81614083565b9150506112f8565b505050565b600f5473ffffffffffffffffffffffffffffffffffffffff1633146114005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b60008061147483600e80548060200260200160405190810160405280929190818152602001828054801561146a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161143f575b5050505050613570565b91509150811561158d57600e805461148e906001906140bc565b8154811061149e5761149e613f3a565b600091825260209091200154600e805473ffffffffffffffffffffffffffffffffffffffff90921691839081106114d7576114d7613f3a565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e805480611530576115306140d3565b60008281526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055505050565b60405162461bcd60e51b815260206004820152601860248201527f42757965722064697361626c6564206f7220616273656e740000000000000000604482015260640161071c565b600f5473ffffffffffffffffffffffffffffffffffffffff16331461163c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b6000806116ae83600d80548060200260200160405190810160405280929190818152602001828054801561146a5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161143f575050505050613570565b91509150811561176a57600d80546116c8906001906140bc565b815481106116d8576116d8613f3a565b600091825260209091200154600d805473ffffffffffffffffffffffffffffffffffffffff909216918390811061171157611711613f3a565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d805480611530576115306140d3565b60405162461bcd60e51b815260206004820181905260248201527f427579657220616c72656164792064697361626c6564206f7220616273656e74604482015260640161071c565b61ffff81166000908152600760209081526040808320805482518185028101850190935280835260609493849084015b82821015611241576000848152602090819020604080516101208101825260058602909201805461ffff808216855273ffffffffffffffffffffffffffffffffffffffff6201000083041685870152760100000000000000000000000000000000000000000000820481168585015263ffffffff78010000000000000000000000000000000000000000000000008304811660608701527c0100000000000000000000000000000000000000000000000000000000909204909116608085015260018201541660a0840152600281015460c08401526003810180548351818702810187019094528084529394919360e08601939283018282801561192d57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116118f45790505b50505091835250506004919091015461ffff1660209182015290825260019290920191016117e2565b600f5460609073ffffffffffffffffffffffffffffffffffffffff1633146119c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600d805480602002602001604051908101604052809291908181526020018280548015611a2357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116119f8575b5050505050905090565b60028181548110611a3d57600080fd5b60009182526020909120015461ffff8116915062010000900460ff1682565b60035460405164010000000090910460f01b7fffff0000000000000000000000000000000000000000000000000000000000001660208201527f5f000000000000000000000000000000000000000000000000000000000000006022820152606082811b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602383015290600090603701604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008181526009835283812080548085028701850190955284865291955090929184015b82821015611bf75760008481526020908190206040805161010081018252600586029092018054835260018082015461ffff808216868801526201000082041693850193909352640100000000830463ffffffff1660608501526801000000000000000090920473ffffffffffffffffffffffffffffffffffffffff908116608085015260028201541660a0840152600381015460c08401526004015460e08301529083529092019101611b48565b50505050915050919050565b60096020528160005260406000208181548110611c1f57600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015492955061ffff80831695506201000083041693640100000000830463ffffffff16936801000000000000000090930473ffffffffffffffffffffffffffffffffffffffff9081169392169188565b600f5473ffffffffffffffffffffffffffffffffffffffff163314611cfb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600080611d6d83600e80548060200260200160405190810160405280929190818152602001828054801561146a5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161143f575050505050613570565b9150915081611ded57600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd01805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f427579657220616c726561647920616c6c6f7765642100000000000000000000604482015260640161071c565b60408051600180825281830190925260609160009190816020015b611e936040518060c00160405280600061ffff168152602001600061ffff1681526020016000815260200160608152602001600015158152602001606081525090565b815260200190600190039081611e5057905050905082611ed4576001600081548110611ec157611ec1613f3a565b9060005260206000209060050201611ef6565b60008081548110611ee757611ee7613f3a565b90600052602060002090600502015b6040805160c081018252825461ffff808216835262010000909104166020820152600183015491810191909152600282018054919291606084019190611f3b9061402f565b80601f0160208091040260200160405190810160405280929190818152602001828054611f679061402f565b8015611fb45780601f10611f8957610100808354040283529160200191611fb4565b820191906000526020600020905b815481529060010190602001808311611f9757829003601f168201915b5050509183525050600382015460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b8282101561209b57838290600052602060002001805461200e9061402f565b80601f016020809104026020016040519081016040528092919081815260200182805461203a9061402f565b80156120875780601f1061205c57610100808354040283529160200191612087565b820191906000526020600020905b81548152906001019060200180831161206a57829003601f168201915b505050505081526020019060010190611fef565b5050505081525050816000815181106120b6576120b6613f3a565b602090810291909101015292915050565b60006127106120da61ffff841685613fd2565b6120e49190614102565b9392505050565b600f5473ffffffffffffffffffffffffffffffffffffffff1633146121525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600f5460609073ffffffffffffffffffffffffffffffffffffffff1633146122035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b6005805480602002602001604051908101604052809291908181526020016000905b8282101561241e576000848152602090819020604080516080810190915260048502909101805461ffff16825260018101805492939192918401916122699061402f565b80601f01602080910402602001604051908101604052809291908181526020018280546122959061402f565b80156122e25780601f106122b7576101008083540402835291602001916122e2565b820191906000526020600020905b8154815290600101906020018083116122c557829003601f168201915b505050505081526020016002820180546122fb9061402f565b80601f01602080910402602001604051908101604052809291908181526020018280546123279061402f565b80156123745780601f1061234957610100808354040283529160200191612374565b820191906000526020600020905b81548152906001019060200180831161235757829003601f168201915b5050505050815260200160038201805461238d9061402f565b80601f01602080910402602001604051908101604052809291908181526020018280546123b99061402f565b80156124065780601f106123db57610100808354040283529160200191612406565b820191906000526020600020905b8154815290600101906020018083116123e957829003601f168201915b50505050508152505081526020019060010190612225565b50505050905090565b60055460009067ffffffffffffffff81111561244557612445613f0b565b60405190808252806020026020018201604052801561246e578160200160208202803683370190505b5060055490915060009067ffffffffffffffff81111561249057612490613f0b565b6040519080825280602002602001820160405280156124b9578160200160208202803683370190505b5060055490915060009067ffffffffffffffff8111156124db576124db613f0b565b604051908082528060200260200182016040528015612504578160200160208202803683370190505b5060055490915060009067ffffffffffffffff81111561252657612526613f0b565b60405190808252806020026020018201604052801561254f578160200160208202803683370190505b50905060005b60035461ffff640100000000909104811660009081526006602052604090205490821610156126c75760035461ffff640100000000909104811660009081526006602052604081208054919290919084169081106125b5576125b5613f3a565b60009182526020808320600490920290910154600354640100000000900461ffff908116845260069092526040909220805462010000909304821693509190841690811061260557612605613f3a565b906000526020600020906004020160020154868261ffff168151811061262d5761262d613f3a565b602002602001015161263f9190613fba565b868261ffff168151811061265557612655613f3a565b602002602001018181525050838161ffff168151811061267757612677613f3a565b6020026020010151600161268b919061413d565b848261ffff16815181106126a1576126a1613f3a565b61ffff9092166020928302919091019091015250806126bf81613f98565b915050612555565b5060005b60035461ffff640100000000909104811660009081526007602052604090205490821610156128515760035461ffff6401000000009091048116600090815260076020526040812080549192909190841690811061272b5761272b613f3a565b60009182526020808320600590920290910154600354640100000000900461ffff9081168452600790925260409092208054760100000000000000000000000000000000000000000000909304821693509190841690811061278f5761278f613f3a565b906000526020600020906005020160020154858261ffff16815181106127b7576127b7613f3a565b60200260200101516127c99190613fba565b858261ffff16815181106127df576127df613f3a565b602002602001018181525050828161ffff168151811061280157612801613f3a565b60200260200101516001612815919061413d565b838261ffff168151811061282b5761282b613f3a565b61ffff90921660209283029190910190910152508061284981613f98565b9150506126cb565b5060005b84518110156128dd57600085828151811061287257612872613f3a565b60200260200101519050600084838151811061289057612890613f3a565b602002602001015190508061ffff16826128aa9190614102565b8784815181106128bc576128bc613f3a565b602002602001018181525050505080806128d590614083565b915050612855565b5060005b83518161ffff161015612979576000848261ffff168151811061290657612906613f3a565b602002602001015190506000838361ffff168151811061292857612928613f3a565b602002602001015190508061ffff16826129429190614102565b868461ffff168151811061295857612958613f3a565b6020026020010181815250505050808061297190613f98565b9150506128e1565b5060005b84518161ffff161015612af6576000858261ffff16815181106129a2576129a2613f3a565b60200260200101511180156129d457506000848261ffff16815181106129ca576129ca613f3a565b6020026020010151115b15612ae4576000858261ffff16815181106129f1576129f1613f3a565b602002602001015190506000858361ffff1681518110612a1357612a13613f3a565b60200260200101519050600060028284612a2d9190613fba565b612a379190614102565b90508015612ae0576003546040517fffff00000000000000000000000000000000000000000000000000000000000064010000000090920460f090811b831660208301527f5f00000000000000000000000000000000000000000000000000000000000000602283015286901b90911660238201528190600b90600090602501604051602081830303815290604052805190602001208152602001908152602001600020819055505b5050505b80612aee81613f98565b91505061297d565b5050505050565b600f5473ffffffffffffffffffffffffffffffffffffffff163314612b645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600080612bd683600d80548060200260200160405190810160405280929190818152602001828054801561146a5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161143f575050505050613570565b9150915081612c5657600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f53656c6c657220616c726561647920616c6c6f77656400000000000000000000604482015260640161071c565b6103e88261ffff1610612cf35760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420707572697479000000000000000000000000000000000000604482015260640161071c565b60008461ffff16118015612d0b575060008361ffff16115b612d575760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e69747300000000000000000000000000000000000000604482015260640161071c565b60008111612da75760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b205050550000000000000000000000000000000000604482015260640161071c565b60055461ffff861610612dfc5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f7572636500000000000000000000000000000000604482015260640161071c565b6040805161012081018252600180825233602083015261ffff8881168385015287811660608401528681166080840152851660a083015260c08201849052825181815280840190935260009260e0830191816020016020820280368337505050815260006020909101819052909150612e756001611e35565b604080516001808252818301909252919250600091906020808301908036833701905050905060005b82518161ffff161015612f0c57828161ffff1681518110612ec157612ec1613f3a565b6020026020010151600001518460e001518261ffff1681518110612ee757612ee7613f3a565b61ffff9092166020928302919091019091015280612f0481613f98565b915050612e9e565b50600080612f2285600001518660c00151610cf4565b805161ffff16610100870152606086015160c0870151919250600091612f6191612f549163ffffffff90911690613fd2565b836020015160ff166120c7565b905060005b8660e00151518160ff161015612ff457858160ff1681518110612f8b57612f8b613f3a565b60200260200101516040015184612fa29190613fba565b9350612fd6876060015163ffffffff168860c00151612fc19190613fd2565b878360ff1681518110610a1e57610a1e613f3a565b612fe09085613fba565b935080612fec8161400f565b915050612f66565b50612fff8184613fba565b34101561304e5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f72206665657300000000604482015260640161071c565b82156130665761305d8361351c565b613066816135f9565b600760209081527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df805460018101825560009190915287517fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7ca600590920291820180548a85015160408c015160608d015160808e015161ffff9687167fffffffffffffffffffff00000000000000000000000000000000000000000000909516949094176201000073ffffffffffffffffffffffffffffffffffffffff90941693909302929092177fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff16760100000000000000000000000000000000000000000000918616919091027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1617780100000000000000000000000000000000000000000000000063ffffffff92831602177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c0100000000000000000000000000000000000000000000000000000000919092160217815560a08a01517fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cb840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016919093161790915560c08901517fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cc83015560e089015180518a9492936132b2937fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cd909101920190613661565b506101009190910151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff9092169190911790555050505050505050505050565b600f5473ffffffffffffffffffffffffffffffffffffffff1633146133645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b6003805473ffffffffffffffffffffffffffffffffffffffff9092166601000000000000027fffffffffffff0000000000000000000000000000000000000000ffffffffffff909216919091179055565b600f5460609073ffffffffffffffffffffffffffffffffffffffff16331461341f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600e805480602002602001604051908101604052809291908181526020018280548015611a235760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116119f8575050505050905090565b6135198160405160240161349e9190614163565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052613640565b50565b600354604051660100000000000090910473ffffffffffffffffffffffffffffffffffffffff16906108fc8315029083906000818181858888f1935050505015801561356c573d6000803e3d6000fd5b5050565b60008060005b83518110156135e9578473ffffffffffffffffffffffffffffffffffffffff168482815181106135a8576135a8613f3a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156135d7576001925090506135f2565b806135e181614083565b915050613576565b50600080915091505b9250929050565b60045460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f1935050505015801561356c573d6000803e3d6000fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805482825590600052602060002090600f016010900481019282156136fa5791602002820160005b838211156136ca57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261368a565b80156136f85782816101000a81549061ffff02191690556002016020816001010492830192600103026136ca565b505b5061370692915061370a565b5090565b5b80821115613706576000815560010161370b565b73ffffffffffffffffffffffffffffffffffffffff8116811461351957600080fd5b60006020828403121561375357600080fd5b81356120e48161371f565b803561ffff8116811461377057600080fd5b919050565b600080600080600060a0868803121561378d57600080fd5b6137968661375e565b94506137a46020870161375e565b93506137b26040870161375e565b92506137c06060870161375e565b949793965091946080013592915050565b600080604083850312156137e457600080fd5b6137ed8361375e565b946020939093013593505050565b60006020828403121561380d57600080fd5b5035919050565b6000815180845260005b8181101561383a5760208185018101518683018201520161381e565b8181111561384c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061ffff808816835280871660208401525084604083015260a060608301526138ac60a0830185613814565b905082151560808301529695505050505050565b6000806000606084860312156138d557600080fd5b6138de8461375e565b9250602084013563ffffffff811681146138f757600080fd5b915060408401356139078161371f565b809150509250925092565b60006020828403121561392457600080fd5b6120e48261375e565b600081518084526020808501945080840160005b8381101561396157815161ffff1687529582019590820190600101613941565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613a5f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805161ffff9081168552888201518116898601528782015173ffffffffffffffffffffffffffffffffffffffff168886015260608083015163ffffffff908116918701919091526080808401519091169086015260a0808301519091169085015260c0808201519085015260e09081015161010091850182905290613a4b8186018361392d565b968901969450505090860190600101613993565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613a5f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805161ffff90811685528882015173ffffffffffffffffffffffffffffffffffffffff16898601528782015181168886015260608083015163ffffffff908116918701919091526080808401519091169086015260a0808301519091169085015260c0808201519085015260e0808201516101208287018190529190613b4d8388018261392d565b92505050610100808301519250613b698187018461ffff169052565b509588019593505090860190600101613a94565b6020808252825182820181905260009190848201906040850190845b81811015613bcb57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613b99565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613c96578151805185528681015161ffff9081168887015286820151168686015260608082015163ffffffff169086015260808082015173ffffffffffffffffffffffffffffffffffffffff811682880152505060a08181015173ffffffffffffffffffffffffffffffffffffffff811687830152505060c0818101519086015260e090810151908501526101009093019290850190600101613bf4565b5091979650505050505050565b60008060408385031215613cb657600080fd5b50508035926020909101359150565b600060208284031215613cd757600080fd5b813580151581146120e457600080fd5b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015613e0f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b8503018752825160c061ffff808351168752808c840151168c88015250898201518a8701526060808301518282890152613d7483890182613814565b6080858101511515908a015260a094850151898203958a01959095528451808252948e01949093508d84019250905080891b83018d01865b82811015613df8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858303018452613de6828751613814565b958f0195938f01939150600101613dac565b509a8d019a97505050938a01935050600101613d0e565b50919a9950505050505050505050565b60008060408385031215613e3257600080fd5b82359150613e426020840161375e565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613a5f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151608061ffff825116855288820151818a870152613ec282870182613814565b9150508782015185820389870152613eda8282613814565b91505060608083015192508582038187015250613ef78183613814565b968901969450505090860190600101613e72565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061ffff80831681811415613fb057613fb0613f69565b6001019392505050565b60008219821115613fcd57613fcd613f69565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561400a5761400a613f69565b500290565b600060ff821660ff81141561402657614026613f69565b60010192915050565b600181811c9082168061404357607f821691505b6020821081141561407d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156140b5576140b5613f69565b5060010190565b6000828210156140ce576140ce613f69565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600082614138577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600061ffff80831681851680830382111561415a5761415a613f69565b01949350505050565b6020815260006120e4602083018461381456fea26469706673582212204697ab34fa8174d5c9929392eeca20905c0e3fcf2ad882944d0a9b2eca1eb06964736f6c63430008090033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(params, overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
