/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Controller,
  ControllerInterface,
  ConstructorParamsStruct,
} from "../Controller";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "askFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "percentage",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "feeType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "cumulative",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "noCombine",
                type: "string[]",
              },
            ],
            internalType: "struct Fee[]",
            name: "bidFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "id",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "percentage",
                type: "uint8",
              },
            ],
            internalType: "struct MarginFee[]",
            name: "marginFees",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "numberOfPeriodsPerDay",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodDurationInMinutes",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartHour",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "periodsStartMinute",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "treasuryWallet",
            type: "address",
          },
          {
            internalType: "address",
            name: "escrowWallet",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "measurementUnit",
                type: "string",
              },
            ],
            internalType: "struct Resource[]",
            name: "resources",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "sellers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "buyers",
            type: "address[]",
          },
        ],
        internalType: "struct ConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "addBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "addSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "askFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "feeType",
        type: "string",
      },
      {
        internalType: "bool",
        name: "cumulative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theNumber",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "percentage",
        type: "uint16",
      },
    ],
    name: "calculatePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "periodId",
        type: "uint16",
      },
    ],
    name: "getAsks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "asker",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "askPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
        ],
        internalType: "struct ResourceAsk[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "periodId",
        type: "uint16",
      },
    ],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
          {
            internalType: "uint16",
            name: "marginFeeId",
            type: "uint16",
          },
        ],
        internalType: "struct ResourceBid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResources",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "measurementUnit",
            type: "string",
          },
        ],
        internalType: "struct Resource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPeriodId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marginFees",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPeriodsPerDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDurationInMinutes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodsStartMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isAsk",
        type: "bool",
      },
    ],
    name: "pickFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "percentage",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "feeType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "cumulative",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "noCombine",
            type: "string[]",
          },
        ],
        internalType: "struct Fee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "resourceId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "units",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "purity",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "bidPPU",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "appliedFeeIds",
            type: "uint16[]",
          },
          {
            internalType: "uint16",
            name: "marginFeeId",
            type: "uint16",
          },
        ],
        internalType: "struct ResourceBid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "pickMarginFee",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "percentage",
            type: "uint8",
          },
        ],
        internalType: "struct MarginFee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "removeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "removeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resourceAsks",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "asker",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEscrow",
        type: "address",
      },
    ],
    name: "setEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "askPPU",
        type: "uint256",
      },
    ],
    name: "submitAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "resourceId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "units",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "purity",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "bidPPU",
        type: "uint256",
      },
    ],
    name: "submitBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162004a4738038062004a47833981016040819052620000349162000e52565b6200007f6040518060400160405280601481526020017f4465706c6f79696e6720436f6e74726f6c6c65720000000000000000000000008152506200067b60201b62002adf1760201c565b600081602001515111620000da5760405162461bcd60e51b815260206004820152601360248201527f4e6f20626964206665652070726f76696465640000000000000000000000000060448201526064015b60405180910390fd5b8051516200012b5760405162461bcd60e51b815260206004820152601360248201527f4e6f2061736b206665652070726f7669646564000000000000000000000000006044820152606401620000d1565b600081604001515111620001825760405162461bcd60e51b815260206004820152601660248201527f4e6f206d617267696e206665652070726f7669646564000000000000000000006044820152606401620000d1565b606081015160038054608084015160a085015160c086015160e087015161010080890151600480546001600160a01b0319166001600160a01b0392831617905560ff98891661ffff1990971696909617948816029390931763ffff00001916620100009287169290920263ff0000001916919091176301000000959091169490940293909317600160201b600160d01b0319166601000000000000919093160261ffff60201b191691909117905560005b81610160015151811015620002ae57600982610160015182815181106200025e576200025e62001005565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620002a5816200101b565b91505062000233565b5060005b816101400151518110156200032d5760088261014001518281518110620002dd57620002dd62001005565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558062000324816200101b565b915050620002b2565b5060005b81610120015151811015620003f657600582610120015182815181106200035c576200035c62001005565b602090810291909101810151825460018181018555600094855293839020825160049092020190815581830151805192949193620003a19392850192910190620006ea565b5060408201518051620003bf916002840191602090910190620006ea565b5060608201518051620003dd916003840191602090910190620006ea565b5050508080620003ed906200101b565b91505062000331565b5060005b815151811015620004e55760008260000151828151811062000420576200042062001005565b602090810291909101810151825460018181018555600094855293839020825160059092020180548385015161ffff908116620100000263ffffffff19909216931692909217919091178155604082015193810193909355606081015180519193926200049692600285019290910190620006ea565b50608082015160038201805460ff191691151591909117905560a08201518051620004cc91600484019160209091019062000779565b5050508080620004dc906200101b565b915050620003fa565b5060005b816020015151811015620005d75760018260200151828151811062000512576200051262001005565b602090810291909101810151825460018181018555600094855293839020825160059092020180548385015161ffff908116620100000263ffffffff19909216931692909217919091178155604082015193810193909355606081015180519193926200058892600285019290910190620006ea565b50608082015160038201805460ff191691151591909117905560a08201518051620005be91600484019160209091019062000779565b5050508080620005ce906200101b565b915050620004e9565b5060005b816040015151811015620006615760028260400151828151811062000604576200060462001005565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160ff16620100000262ffffff1990911661ffff909316929092179190911790558062000658816200101b565b915050620005db565b5050600a80546001600160a01b03191633179055620010b7565b620006c68160405160240162000692919062001045565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b17909152620006c916565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054620006f8906200107a565b90600052602060002090601f0160209004810192826200071c576000855562000767565b82601f106200073757805160ff191683800117855562000767565b8280016001018555821562000767579182015b82811115620007675782518255916020019190600101906200074a565b5062000775929150620007d9565b5090565b828054828255906000526020600020908101928215620007cb579160200282015b82811115620007cb5782518051620007ba918491602090910190620006ea565b50916020019190600101906200079a565b5062000775929150620007f0565b5b80821115620007755760008155600101620007da565b808211156200077557600062000807828262000811565b50600101620007f0565b5080546200081f906200107a565b6000825580601f1062000830575050565b601f016020900490600052602060002090810190620006c69190620007d9565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156200088b576200088b62000850565b60405290565b604080519081016001600160401b03811182821017156200088b576200088b62000850565b604051608081016001600160401b03811182821017156200088b576200088b62000850565b60405161018081016001600160401b03811182821017156200088b576200088b62000850565b604051601f8201601f191681016001600160401b03811182821017156200092c576200092c62000850565b604052919050565b60006001600160401b0382111562000950576200095062000850565b5060051b60200190565b805161ffff811681146200096d57600080fd5b919050565b60005b838110156200098f57818101518382015260200162000975565b838111156200099f576000848401525b50505050565b600082601f830112620009b757600080fd5b81516001600160401b03811115620009d357620009d362000850565b620009e8601f8201601f191660200162000901565b818152846020838601011115620009fe57600080fd5b62000a1182602083016020870162000972565b949350505050565b805180151581146200096d57600080fd5b600082601f83011262000a3c57600080fd5b8151602062000a5562000a4f8362000934565b62000901565b82815260059290921b8401810191818101908684111562000a7557600080fd5b8286015b8481101562000ab95780516001600160401b0381111562000a9a5760008081fd5b62000aaa8986838b0101620009a5565b84525091830191830162000a79565b509695505050505050565b600082601f83011262000ad657600080fd5b8151602062000ae962000a4f8362000934565b82815260059290921b8401810191818101908684111562000b0957600080fd5b8286015b8481101562000ab95780516001600160401b038082111562000b2f5760008081fd5b9088019060c0828b03601f190181131562000b4a5760008081fd5b62000b5462000866565b62000b618885016200095a565b8152604062000b728186016200095a565b898301526060808601518284015260809150818601518581111562000b975760008081fd5b62000ba78f8c838a0101620009a5565b82850152505060a062000bbc81870162000a19565b8383015292850151928484111562000bd657600091508182fd5b62000be68e8b8689010162000a2a565b9083015250865250505091830191830162000b0d565b805160ff811681146200096d57600080fd5b600082601f83011262000c2057600080fd5b8151602062000c3362000a4f8362000934565b82815260069290921b8401810191818101908684111562000c5357600080fd5b8286015b8481101562000ab9576040818903121562000c725760008081fd5b62000c7c62000891565b62000c87826200095a565b815262000c9685830162000bfc565b8186015283529183019160400162000c57565b80516001600160a01b03811681146200096d57600080fd5b600082601f83011262000cd357600080fd5b8151602062000ce662000a4f8362000934565b82815260059290921b8401810191818101908684111562000d0657600080fd5b8286015b8481101562000ab95780516001600160401b038082111562000d2c5760008081fd5b908801906080828b03601f190181131562000d475760008081fd5b62000d51620008b6565b8784015181526040808501518481111562000d6c5760008081fd5b62000d7c8e8b83890101620009a5565b8a840152506060808601518581111562000d965760008081fd5b62000da68f8c838a0101620009a5565b848401525092850151928484111562000dc157600091508182fd5b62000dd18e8b86890101620009a5565b9083015250865250505091830191830162000d0a565b600082601f83011262000df957600080fd5b8151602062000e0c62000a4f8362000934565b82815260059290921b8401810191818101908684111562000e2c57600080fd5b8286015b8481101562000ab95762000e448162000ca9565b835291830191830162000e30565b60006020828403121562000e6557600080fd5b81516001600160401b038082111562000e7d57600080fd5b90830190610180828603121562000e9357600080fd5b62000e9d620008db565b82518281111562000ead57600080fd5b62000ebb8782860162000ac4565b82525060208301518281111562000ed157600080fd5b62000edf8782860162000ac4565b60208301525060408301518281111562000ef857600080fd5b62000f068782860162000c0e565b60408301525062000f1a6060840162000bfc565b606082015262000f2d6080840162000bfc565b608082015262000f4060a0840162000bfc565b60a082015262000f5360c0840162000bfc565b60c082015262000f6660e0840162000ca9565b60e082015261010062000f7b81850162000ca9565b90820152610120838101518381111562000f9457600080fd5b62000fa28882870162000cc1565b828401525050610140808401518381111562000fbd57600080fd5b62000fcb8882870162000de7565b828401525050610160808401518381111562000fe657600080fd5b62000ff48882870162000de7565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200103e57634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152600082518060208401526200106681604085016020870162000972565b601f01601f19169190910160400192915050565b600181811c908216806200108f57607f821691505b60208210811415620010b157634e487b7160e01b600052602260045260246000fd5b50919050565b61398080620010c76000396000f3fe6080604052600436106101a15760003560e01c80638bceb523116100e1578063c10c35461161008a578063d93fabfa11610064578063d93fabfa1461054b578063e03ff7141461056b578063f0f442601461058c578063f64bfaba146105ac57600080fd5b8063c10c3546146104c7578063c1cc57b0146104e7578063d3d59e261461050957600080fd5b8063bbf89803116100bb578063bbf898031461044c578063bcddb9f61461046c578063bd0ae2311461049957600080fd5b80638bceb5231461038e57806394d8088c146103fd578063a0b4331a1461043957600080fd5b8063573c93491161014e5780636f75b00c116101285780636f75b00c146102ff5780637cb9cf541461031f5780637da33de81461033f5780637ee454cb1461036c57600080fd5b8063573c9349146102a557806358194312146102d2578063637e2406146102e557600080fd5b80631b0723171161017f5780631b0723171461021e5780633ffb090714610254578063471bce561461028557600080fd5b80630547be29146101a657806313af4035146101dc5780631842476b146101fe575b600080fd5b3480156101b257600080fd5b506003546101c590610100900460ff1681565b60405160ff90911681526020015b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004612f00565b6105c1565b005b34801561020a57600080fd5b506003546101c59062010000900460ff1681565b34801561022a57600080fd5b5060035461024190640100000000900461ffff1681565b60405161ffff90911681526020016101d3565b34801561026057600080fd5b5061027461026f366004612f1b565b610674565b6040516101d3959493929190612f9f565b34801561029157600080fd5b506102746102a0366004612f1b565b61074b565b3480156102b157600080fd5b506102c56102c0366004612ff2565b61075b565b6040516101d3919061304c565b6101fc6102e0366004613134565b6108ca565b3480156102f157600080fd5b506003546101c59060ff1681565b34801561030b57600080fd5b506101fc61031a366004612f00565b611046565b34801561032b57600080fd5b506101fc61033a366004612f00565b611287565b34801561034b57600080fd5b5061035f61035a366004612ff2565b611464565b6040516101d3919061317f565b34801561037857600080fd5b506103816115eb565b6040516101d3919061327e565b34801561039a57600080fd5b506103ae6103a93660046132d8565b6116c2565b6040805196875261ffff958616602088015273ffffffffffffffffffffffffffffffffffffffff90941693860193909352908316606085015291909116608083015260a082015260c0016101d3565b34801561040957600080fd5b5061041d610418366004612f1b565b611764565b6040805161ffff909316835260ff9091166020830152016101d3565b6101fc610447366004613134565b611793565b34801561045857600080fd5b506101fc610467366004612f00565b611fc5565b34801561047857600080fd5b5061048c610487366004613302565b612166565b6040516101d39190613324565b3480156104a557600080fd5b506104b96104b436600461345c565b6123f8565b6040519081526020016101d3565b3480156104d357600080fd5b506101fc6104e2366004612f00565b61241c565b3480156104f357600080fd5b506104fc6124ca565b6040516101d39190613488565b34801561051557600080fd5b5061052961052436600461365d565b612751565b60408051825161ffff16815260209283015160ff1692810192909252016101d3565b34801561055757600080fd5b506101fc610566366004612f00565b6127b1565b34801561057757600080fd5b506003546101c5906301000000900460ff1681565b34801561059857600080fd5b506101fc6105a7366004612f00565b612952565b3480156105b857600080fd5b50610381612a0a565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461062d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000818154811061068457600080fd5b600091825260209091206005909102018054600182015460028301805461ffff8085169650620100009094049093169391926106bf90613734565b80601f01602080910402602001604051908101604052809291908181526020018280546106eb90613734565b80156107385780601f1061070d57610100808354040283529160200191610738565b820191906000526020600020905b81548152906001019060200180831161071b57829003601f168201915b5050506003909301549192505060ff1685565b6001818154811061068457600080fd5b61ffff81166000908152600660209081526040808320805482518185028101850190935280835260609493849084015b828210156108be5760008481526020908190206040805160e0810182526004860290920180548352600181015461ffff8082168587015273ffffffffffffffffffffffffffffffffffffffff62010000830416858501527601000000000000000000000000000000000000000000008204811660608601527801000000000000000000000000000000000000000000000000909104166080840152600281015460a08401526003810180548351818702810187019094528084529394919360c0860193928301828280156108a657602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161086d5790505b5050505050815250508152602001906001019061078b565b50929695505050505050565b6103e88261ffff161061091f5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207075726974790000000000000000000000000000000000006044820152606401610624565b60008361ffff16116109735760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e697473000000000000000000000000000000000000006044820152606401610624565b600081116109c35760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b2050505500000000000000000000000000000000006044820152606401610624565b600080610be7866005805480602002602001604051908101604052809291908181526020016000905b82821015610bde578382906000526020600020906004020160405180608001604052908160008201548152602001600182018054610a2990613734565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5590613734565b8015610aa25780601f10610a7757610100808354040283529160200191610aa2565b820191906000526020600020905b815481529060010190602001808311610a8557829003601f168201915b50505050508152602001600282018054610abb90613734565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae790613734565b8015610b345780601f10610b0957610100808354040283529160200191610b34565b820191906000526020600020905b815481529060010190602001808311610b1757829003601f168201915b50505050508152602001600382018054610b4d90613734565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7990613734565b8015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081525050815260200190600101906109ec565b50505050612b71565b9150915081610c385760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f75726365000000000000000000000000000000006044820152606401610624565b60006040518060e00160405280600181526020018861ffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018761ffff1681526020018661ffff168152602001858152602001600167ffffffffffffffff811115610ca657610ca6613544565b604051908082528060200260200182016040528015610ccf578160200160208202803683370190505b50905290506000610ce06001612166565b905060005b81518161ffff161015610d5357818161ffff1681518110610d0857610d08613788565b6020026020010151600001518360c001518261ffff1681518110610d2e57610d2e613788565b61ffff9092166020928302919091019091015280610d4b816137e6565b915050610ce5565b506000805b82518160ff161015610dff57610d97838260ff1681518110610d7c57610d7c613788565b60200260200101516040015183612bd690919063ffffffff16565b9150610deb610de4610dbe866060015161ffff168760a00151612be290919063ffffffff16565b858460ff1681518110610dd357610dd3613788565b6020026020010151602001516123f8565b8390612bd6565b915080610df781613808565b915050610d58565b50610e0981612bee565b80341015610e595760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f722066656573000000006044820152606401610624565b610e6281612c7f565b600660209081527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f88054600181018255600091909152845160049091027ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f38101918255858301517ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f482018054604089015160608a015160808b015161ffff9081167801000000000000000000000000000000000000000000000000027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff92821676010000000000000000000000000000000000000000000002929092167fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff90941662010000027fffffffffffffffffffff00000000000000000000000000000000000000000000909516969091169590951792909217169290921791909117905560a08601517ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f582015560c086015180518794611038937ff1ca0f4808f7f0c52440675894727c9e66265266cd1e1f5015f8b745ca2de5f601920190612e19565b505050505050505050505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b60008061112183600980548060200260200160405190810160405280929190818152602001828054801561111757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110ec575b5050505050612d54565b91509150811561123a576009805461113b90600190613828565b8154811061114b5761114b613788565b6000918252602090912001546009805473ffffffffffffffffffffffffffffffffffffffff909216918390811061118457611184613788565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060098054806111dd576111dd61383f565b60008281526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055019055505050565b60405162461bcd60e51b815260206004820152601860248201527f42757965722064697361626c6564206f7220616273656e7400000000000000006044820152606401610624565b505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146112ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b6000806113608360088054806020026020016040519081016040528092919081815260200182805480156111175760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110ec575050505050612d54565b91509150811561141c576008805461137a90600190613828565b8154811061138a5761138a613788565b6000918252602090912001546008805473ffffffffffffffffffffffffffffffffffffffff90921691839081106113c3576113c3613788565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060088054806111dd576111dd61383f565b60405162461bcd60e51b815260206004820181905260248201527f427579657220616c72656164792064697361626c6564206f7220616273656e746044820152606401610624565b61ffff81166000908152600760209081526040808320805482518185028101850190935280835260609493849084015b828210156108be57600084815260209081902060408051610100810182526005860290920180548352600181015473ffffffffffffffffffffffffffffffffffffffff81168486015261ffff7401000000000000000000000000000000000000000082048116858501527601000000000000000000000000000000000000000000008204811660608601527801000000000000000000000000000000000000000000000000909104166080840152600281015460a08401526003810180548351818702810187019094528084529394919360c0860193928301828280156115c257602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116115895790505b50505091835250506004919091015461ffff166020918201529082526001929092019101611494565b600a5460609073ffffffffffffffffffffffffffffffffffffffff1633146116555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b60088054806020026020016040519081016040528092919081815260200182805480156116b857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161168d575b5050505050905090565b600660205281600052604060002081815481106116de57600080fd5b600091825260209091206004909102018054600182015460029092015490935061ffff808316935073ffffffffffffffffffffffffffffffffffffffff6201000084041692760100000000000000000000000000000000000000000000810482169278010000000000000000000000000000000000000000000000009091049091169086565b6002818154811061177457600080fd5b60009182526020909120015461ffff8116915062010000900460ff1682565b6103e88261ffff16106117e85760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207075726974790000000000000000000000000000000000006044820152606401610624565b60008361ffff161161183c5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420756e697473000000000000000000000000000000000000006044820152606401610624565b6000811161188c5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061736b2050505500000000000000000000000000000000006044820152606401610624565b600080611aa7866005805480602002602001604051908101604052809291908181526020016000905b82821015610bde5783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546118f290613734565b80601f016020809104026020016040519081016040528092919081815260200182805461191e90613734565b801561196b5780601f106119405761010080835404028352916020019161196b565b820191906000526020600020905b81548152906001019060200180831161194e57829003601f168201915b5050505050815260200160028201805461198490613734565b80601f01602080910402602001604051908101604052809291908181526020018280546119b090613734565b80156119fd5780601f106119d2576101008083540402835291602001916119fd565b820191906000526020600020905b8154815290600101906020018083116119e057829003601f168201915b50505050508152602001600382018054611a1690613734565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4290613734565b8015611a8f5780601f10611a6457610100808354040283529160200191611a8f565b820191906000526020600020905b815481529060010190602001808311611a7257829003601f168201915b505050505081525050815260200190600101906118b5565b9150915081611af85760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207265736f75726365000000000000000000000000000000006044820152606401610624565b6000604051806101000160405280600181526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018861ffff1681526020018761ffff1681526020018661ffff168152602001858152602001600167ffffffffffffffff811115611b6757611b67613544565b604051908082528060200260200182016040528015611b90578160200160208202803683370190505b508152602001600061ffff1681525090506000611bad6001612166565b604080516001808252818301909252919250600091906020808301908036833701905050905060005b82518161ffff161015611c4457828161ffff1681518110611bf957611bf9613788565b6020026020010151600001518460c001518261ffff1681518110611c1f57611c1f613788565b61ffff9092166020928302919091019091015280611c3c816137e6565b915050611bd6565b50600080611c5185612751565b805161ffff90811660e0880152606087015160a0880151929350600092611c8992611c7c9216612be2565b836020015160ff166123f8565b905060005b8660c00151518160ff161015611d2657611cd1868260ff1681518110611cb657611cb6613788565b60200260200101516040015185612bd690919063ffffffff16565b50611d13611d0c611cf7896060015161ffff168a60a00151612be290919063ffffffff16565b888460ff1681518110610dd357610dd3613788565b8590612bd6565b5080611d1e81613808565b915050611c8e565b50611d318382612bd6565b341015611d805760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768204554482073656e7420666f722066656573000000006044820152606401610624565b611d8983612c7f565b611d9283612dcd565b600760209081527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df8054600181018255600091909152875160059091027fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7ca8101918255888301517fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cb8201805460408c015160608d015160808e015161ffff9081167801000000000000000000000000000000000000000000000000027fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff92821676010000000000000000000000000000000000000000000002929092167fffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffff9390911674010000000000000000000000000000000000000000027fffffffffffffffffffff0000000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9096169590951792909217169290921791909117905560a08901517fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cc82015560c089015180518a94611f7a937fd9e659536a2f603b20938d4b8c1783b32b56367744f7b53b49ad35612a31e7cd01920190612e19565b5060e09190910151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff909216919091179055505050505050505050505050565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461202c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b60008061209e8360098054806020026020016040519081016040528092919081815260200182805480156111175760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110ec575050505050612d54565b915091508161211e57600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f427579657220616c726561647920616c6c6f77656421000000000000000000006044820152606401610624565b60408051600180825281830190925260609160009190816020015b6121c46040518060c00160405280600061ffff168152602001600061ffff1681526020016000815260200160608152602001600015158152602001606081525090565b815260200190600190039081612181579050509050826122055760016000815481106121f2576121f2613788565b9060005260206000209060050201612227565b6000808154811061221857612218613788565b90600052602060002090600502015b6040805160c081018252825461ffff80821683526201000090910416602082015260018301549181019190915260028201805491929160608401919061226c90613734565b80601f016020809104026020016040519081016040528092919081815260200182805461229890613734565b80156122e55780601f106122ba576101008083540402835291602001916122e5565b820191906000526020600020905b8154815290600101906020018083116122c857829003601f168201915b5050509183525050600382015460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b828210156123cc57838290600052602060002001805461233f90613734565b80601f016020809104026020016040519081016040528092919081815260200182805461236b90613734565b80156123b85780601f1061238d576101008083540402835291602001916123b8565b820191906000526020600020905b81548152906001019060200180831161239b57829003601f168201915b505050505081526020019060010190612320565b5050505081525050816000815181106123e7576123e7613788565b602090810291909101015292915050565b600061271061240b8461ffff8516612be2565b612415919061386e565b9392505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146124835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600a5460609073ffffffffffffffffffffffffffffffffffffffff1633146125345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b6005805480602002602001604051908101604052809291908181526020016000905b8282101561274857838290600052602060002090600402016040518060800160405290816000820154815260200160018201805461259390613734565b80601f01602080910402602001604051908101604052809291908181526020018280546125bf90613734565b801561260c5780601f106125e15761010080835404028352916020019161260c565b820191906000526020600020905b8154815290600101906020018083116125ef57829003601f168201915b5050505050815260200160028201805461262590613734565b80601f016020809104026020016040519081016040528092919081815260200182805461265190613734565b801561269e5780601f106126735761010080835404028352916020019161269e565b820191906000526020600020905b81548152906001019060200180831161268157829003601f168201915b505050505081526020016003820180546126b790613734565b80601f01602080910402602001604051908101604052809291908181526020018280546126e390613734565b80156127305780601f1061270557610100808354040283529160200191612730565b820191906000526020600020905b81548152906001019060200180831161271357829003601f168201915b50505050508152505081526020019060010190612556565b50505050905090565b60408051808201909152600080825260208201526000600260008154811061277b5761277b613788565b60009182526020918290206040805180820190915291015461ffff8116825262010000900460ff16918101919091529392505050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146128185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b60008061288a8360088054806020026020016040519081016040528092919081815260200182805480156111175760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110ec575050505050612d54565b915091508161290a57600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b60405162461bcd60e51b815260206004820152601660248201527f53656c6c657220616c726561647920616c6c6f776564000000000000000000006044820152606401610624565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146129b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b6003805473ffffffffffffffffffffffffffffffffffffffff9092166601000000000000027fffffffffffff0000000000000000000000000000000000000000ffffffffffff909216919091179055565b600a5460609073ffffffffffffffffffffffffffffffffffffffff163314612a745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b60098054806020026020016040519081016040528092919081815260200182805480156116b85760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161168d575050505050905090565b612b6e81604051602401612af391906138a9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052612df8565b50565b60008060005b8351811015612bc6578461ffff16848281518110612b9757612b97613788565b6020026020010151600001511415612bb457600192509050612bcf565b80612bbe816138bc565b915050612b77565b50600080915091505b9250929050565b600061241582846138f5565b6000612415828461390d565b612b6e81604051602401612c0491815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff5b1bba900000000000000000000000000000000000000000000000000000000179052612df8565b600080600360069054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040515b60006040518083038185875af1925050503d8060008114612cfd576040519150601f19603f3d011682016040523d82523d6000602084013e612d02565b606091505b5091509150816112825760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642065746865720000000000000000000000006044820152606401610624565b60008060005b8351811015612bc6578473ffffffffffffffffffffffffffffffffffffffff16848281518110612d8c57612d8c613788565b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415612dbb57600192509050612bcf565b80612dc5816138bc565b915050612d5a565b600454604051600091829173ffffffffffffffffffffffffffffffffffffffff909116908490612cc0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805482825590600052602060002090600f01601090048101928215612eb25791602002820160005b83821115612e8257835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302612e42565b8015612eb05782816101000a81549061ffff0219169055600201602081600101049283019260010302612e82565b505b50612ebe929150612ec2565b5090565b5b80821115612ebe5760008155600101612ec3565b803573ffffffffffffffffffffffffffffffffffffffff81168114612efb57600080fd5b919050565b600060208284031215612f1257600080fd5b61241582612ed7565b600060208284031215612f2d57600080fd5b5035919050565b6000815180845260005b81811015612f5a57602081850181015186830182015201612f3e565b81811115612f6c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061ffff808816835280871660208401525084604083015260a06060830152612fcc60a0830185612f34565b905082151560808301529695505050505050565b803561ffff81168114612efb57600080fd5b60006020828403121561300457600080fd5b61241582612fe0565b600081518084526020808501945080840160005b8381101561304157815161ffff1687529582019590820190600101613021565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613126578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805184528781015161ffff908116898601528782015173ffffffffffffffffffffffffffffffffffffffff16888601526060808301518216908601526080808301519091169085015260a0808201519085015260c09081015160e0918501829052906131128186018361300d565b968901969450505090860190600101613073565b509098975050505050505050565b6000806000806080858703121561314a57600080fd5b61315385612fe0565b935061316160208601612fe0565b925061316f60408601612fe0565b9396929550929360600135925050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613126577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281516101008151855273ffffffffffffffffffffffffffffffffffffffff89830151168986015261ffff88830151168886015260608083015161321d8288018261ffff169052565b505060808281015161ffff169086015260a0808301519086015260c08083015181870183905261324f8388018261300d565b9250505060e080830151925061326a8187018461ffff169052565b5095880195935050908601906001016131a6565b6020808252825182820181905260009190848201906040850190845b818110156132cc57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161329a565b50909695505050505050565b600080604083850312156132eb57600080fd5b6132f483612fe0565b946020939093013593505050565b60006020828403121561331457600080fd5b8135801515811461241557600080fd5b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101561344c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b8503018752825160c061ffff808351168752808c840151168c88015250898201518a87015260608083015182828901526133b183890182612f34565b6080858101511515908a015260a094850151898203958a01959095528451808252948e01949093508d84019250905080891b83018d01865b82811015613435577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858303018452613423828751612f34565b958f0195938f019391506001016133e9565b509a8d019a97505050938a0193505060010161334b565b50919a9950505050505050505050565b6000806040838503121561346f57600080fd5b8235915061347f60208401612fe0565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613126577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815160808151855288820151818a8701526134fb82870182612f34565b91505087820151858203898701526135138282612f34565b915050606080830151925085820381870152506135308183612f34565b9689019694505050908601906001016134af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561359757613597613544565b60405290565b600082601f8301126135ae57600080fd5b8135602067ffffffffffffffff808311156135cb576135cb613544565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171561360e5761360e613544565b60405293845285810183019383810192508785111561362c57600080fd5b83870191505b848210156136525761364382612fe0565b83529183019190830190613632565b979650505050505050565b60006020828403121561366f57600080fd5b813567ffffffffffffffff8082111561368757600080fd5b90830190610100828603121561369c57600080fd5b6136a4613573565b823581526136b460208401612ed7565b60208201526136c560408401612fe0565b60408201526136d660608401612fe0565b60608201526136e760808401612fe0565b608082015260a083013560a082015260c08301358281111561370857600080fd5b6137148782860161359d565b60c08301525061372660e08401612fe0565b60e082015295945050505050565b600181811c9082168061374857607f821691505b60208210811415613782577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061ffff808316818114156137fe576137fe6137b7565b6001019392505050565b600060ff821660ff81141561381f5761381f6137b7565b60010192915050565b60008282101561383a5761383a6137b7565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000826138a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6020815260006124156020830184612f34565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138ee576138ee6137b7565b5060010190565b60008219821115613908576139086137b7565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613945576139456137b7565b50029056fea26469706673582212202bd6e5878777bfdde25c762dbbc6ad05787f4e1b8cedef56da18632b646e003e64736f6c63430008090033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(params, overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    params: ConstructorParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
